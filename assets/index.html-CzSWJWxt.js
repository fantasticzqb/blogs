import{_ as n,c as s,o as a,a as p}from"./app-DTribdQX.js";const e={},t=p(`<h1 id="短信调度平台项目" tabindex="-1"><a class="header-anchor" href="#短信调度平台项目"><span>短信调度平台项目</span></a></h1><h2 id="第1章-项目概述及管理端" tabindex="-1"><a class="header-anchor" href="#第1章-项目概述及管理端"><span>第1章 项目概述及管理端</span></a></h2><h2 id="_1-项目概述" tabindex="-1"><a class="header-anchor" href="#_1-项目概述"><span>1. 项目概述</span></a></h2><h3 id="_1-1-背景介绍" tabindex="-1"><a class="header-anchor" href="#_1-1-背景介绍"><span>1.1 背景介绍</span></a></h3><p>随着企业业务扩张、应用成倍的增加、短信规模化使用，传统短信平台的接入方式和单一的信息发送功能，已经不能完全满足现代企业管理的需求，所以统一入口、减少对接成本、同时兼顾多种短信业务、简单易行的操作与维护、高稳定、高可靠的移动信息化应用成为短信平台发展趋势。</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916094348274.3b7c2821.png" alt="image-20210916094348274"></p><ul><li>服务越来越多，每个服务都有可能发送短信，是否每个服务都需要对接一遍？</li><li>多应用对接短信，如何做到短信发送服务高效、稳定？</li><li>短信通道出现异常时，如何快速切换通道？</li><li>切换通道时，如何做到应用服务无感知？</li><li>如何统计各服务短信发送情况，以便进行后续营销分析？</li></ul><p>本项目（动力短信平台）的核心在于保证短信高效、准确的送达、简单易操作的对接方式。通过对服务的解耦、通讯方式的升级来提升系统的吞吐量。同时在多通道的加持下，通过智能动态的通道评级、选举、降级、热插拔，增强了系统的健壮性，摆脱对单一通道的依赖。并且提供多种对接方式，满足企业内部的各种需求。</p><p>动力短信平台的整体架构如下：</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916095249795.37c3be0d.png" alt="image-20210916095249795"></p><h3 id="_1-2-业务架构" tabindex="-1"><a class="header-anchor" href="#_1-2-业务架构"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_1-2-%E4%B8%9A%E5%8A%A1%E6%9E%B6%E6%9E%84" target="_blank" rel="noopener noreferrer">#</a>1.2 业务架构</span></a></h3><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916100828128.572bb5db.png" alt="image-20210916100828128"></p><h3 id="_1-3-技术架构" tabindex="-1"><a class="header-anchor" href="#_1-3-技术架构"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_1-3-%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84" target="_blank" rel="noopener noreferrer">#</a>1.3 技术架构</span></a></h3><h4 id="_1-3-1-系统管理服务" tabindex="-1"><a class="header-anchor" href="#_1-3-1-系统管理服务"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_1-3-1-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1" target="_blank" rel="noopener noreferrer">#</a>1.3.1 系统管理服务</span></a></h4><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916104038523.3cd83cc5.png" alt="image-20210916104038523"></p><h4 id="_1-3-2-短信接收服务" tabindex="-1"><a class="header-anchor" href="#_1-3-2-短信接收服务"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_1-3-2-%E7%9F%AD%E4%BF%A1%E6%8E%A5%E6%94%B6%E6%9C%8D%E5%8A%A1" target="_blank" rel="noopener noreferrer">#</a>1.3.2 短信接收服务</span></a></h4><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916104817659.d9211698.png" alt="image-20210916104817659"></p><h4 id="_1-3-3-短信发送服务" tabindex="-1"><a class="header-anchor" href="#_1-3-3-短信发送服务"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_1-3-3-%E7%9F%AD%E4%BF%A1%E5%8F%91%E9%80%81%E6%9C%8D%E5%8A%A1" target="_blank" rel="noopener noreferrer">#</a>1.3.3 短信发送服务</span></a></h4><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916105359377.3574bf3c.png" alt="image-20210916105359377"></p><h3 id="_1-4-项目模块介绍" tabindex="-1"><a class="header-anchor" href="#_1-4-项目模块介绍"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_1-4-%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E4%BB%8B%E7%BB%8D" target="_blank" rel="noopener noreferrer">#</a>1.4 项目模块介绍</span></a></h3><p>动力短信平台，项目整体工程结构和模块功能如下：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">ydl-sms-backend			 # 动力短信平台父工程</span>
<span class="line">	├── ydl-sms-entity		 # 短信平台实体</span>
<span class="line">	├── ydl-sms-manage		 # 系统管理服务</span>
<span class="line">	├── ydl-sms-api			 # 短信接收服务，应用系统调用接口、发送短信</span>
<span class="line">	├── ydl-sms-server		 # 短信发送服务，调用短信通道、发送短信</span>
<span class="line">	└── ydl-sms-sdk			 # 短信SDK，应用系统引入、发送短信</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6</p><p>动力短信服务有三个：后台管理服务，短信接收服务，短信发送服务：</p><table><thead><tr><th>应用</th><th>端口</th><th>说明</th><th>启动命令</th></tr></thead><tbody><tr><td>ydl-sms-manage</td><td>8770</td><td>后台管理服务</td><td>java -jar ydl-sms-manage.jar &amp;</td></tr><tr><td>ydl-sms-api</td><td>8771</td><td>短信接收服务</td><td>java -jar ydl-sms-api.jar &amp;</td></tr><tr><td>ydl-sms-server</td><td>8772</td><td>短信发送服务</td><td>java -jar ydl-sms-server.jar &amp;</td></tr></tbody></table><h2 id="_2-项目环境准备" tabindex="-1"><a class="header-anchor" href="#_2-项目环境准备"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_2-%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87" target="_blank" rel="noopener noreferrer">#</a>2. 项目环境准备</span></a></h2><h3 id="_2-1-环境要求" tabindex="-1"><a class="header-anchor" href="#_2-1-环境要求"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_2-1-%E7%8E%AF%E5%A2%83%E8%A6%81%E6%B1%82" target="_blank" rel="noopener noreferrer">#</a>2.1 环境要求</span></a></h3><ul><li><p>JDK ： 1.8 +</p></li><li><p>Maven： 3.3 + http://maven.apache.org/download.cgi</p></li><li><p>Docker: 18 +</p><p>docker-compose: 1.23 +</p></li><li><p>Mysql： 5.7.0 + https://downloads.mysql.com/archives/community</p></li><li><p>Redis： 4.0 + https://redis.io/downloa</p></li><li><p>Nacos： 1.1.4 https://github.com/alibaba/nacos/releases</p></li><li><p>Node： 11.3+（集成npm） https://nodejs.org/en/download</p></li></ul><h3 id="_2-2-redis集群" tabindex="-1"><a class="header-anchor" href="#_2-2-redis集群"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_2-2-redis%E9%9B%86%E7%BE%A4" target="_blank" rel="noopener noreferrer">#</a>2.2 Redis集群</span></a></h3><p>Redis集群的哨兵模式是一种特殊的模式，首先Redis提供了哨兵的命令，哨兵是一个独立的进程，作为进程，它会独立运行。其原理是哨兵通过发送命令，等待Redis服务器响应，从而监控运行的多个Redis实例。 哨兵模式作用：</p><ul><li>通过发送命令，让Redis服务器返回监控其运行状态，包括主服务器和从服务器。</li><li>当哨兵监测到master宕机，会自动将slave切换成master，然后通过发布订阅模式通知其他的从服务器，修改配置文件，让它们切换主机。</li></ul><p>除了监控Redis服务之外，哨兵之间也会互相监控。本文采用一主、双从、三哨兵方式</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916120800855.d7a31806.png" alt="image-20210916120800855"></p><p><strong>部署方式为</strong>：docker compose：</p><p>安装、升级docker图文请看：https://mp.weixin.qq.com/s/F3kQvSMYSKbnyLaDIbVl1Q</p><p>第一步：创建redis docker-compose.yml配置文件 目录,并复制docs/dockerfile/redis/docker-compose.yml 到当前目录，配置文件可根据需要调整</p><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line">version: &#39;3.4&#39;</span>
<span class="line">services:</span>
<span class="line"> master:</span>
<span class="line">  image: redis</span>
<span class="line">  restart: always</span>
<span class="line">  container_name: redis-master</span>
<span class="line">  network_mode: &quot;host&quot;</span>
<span class="line">  command: redis-server --port 16380 --requirepass 123456 --protected-mode no --daemonize no</span>
<span class="line">  ports:</span>
<span class="line">   - 16380:16380</span>
<span class="line"> slave1:</span>
<span class="line">  image: redis</span>
<span class="line">  restart: always</span>
<span class="line">  container_name: redis-slave-1</span>
<span class="line">  network_mode: &quot;host&quot;</span>
<span class="line">  command: redis-server --slaveof 127.0.0.1 16380 --port 16381 --requirepass 123456 --masterauth 123456 --protected-mode no --daemonize no</span>
<span class="line">  ports:</span>
<span class="line">   - 16381:16381</span>
<span class="line"> slave2:</span>
<span class="line">  image: redis</span>
<span class="line">  restart: always</span>
<span class="line">  container_name: redis-slave-2</span>
<span class="line">  network_mode: &quot;host&quot; </span>
<span class="line">  command: redis-server --slaveof 127.0.0.1 16380 --port 16382 --requirepass 123456 --masterauth 123456 --protected-mode no --daemonize no</span>
<span class="line">  ports:</span>
<span class="line">   - 16382:16382</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二步：执行启动命令 在当前目录下执行启动命令</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">docker-compose -f docker-compose.yml up -d</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210922111122880.a79ca594.png" alt="image-20210922111122880"></p><p>第三步：创建sentinel docker-compose.yml配置文件 目录,并复制配置文件 复制 docs/dockerfile/sentinel/docker-compose.yml 到当前目录 复制 docs/dockerfile/sentinel/sentinel1.conf 到当前目录 复制 docs/dockerfile/sentinel/sentinel2.conf 到当前目录 复制 docs/dockerfile/sentinel/sentinel3.conf 到当前目录 docker-compose.yml</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">version: &#39;3.4&#39;</span>
<span class="line">services:</span>
<span class="line"> sentinel1:</span>
<span class="line">  image: redis</span>
<span class="line">  restart: always</span>
<span class="line">  container_name: redis-sentinel-1</span>
<span class="line">  network_mode: &quot;host&quot;</span>
<span class="line">  command: redis-sentinel /root/dockerfile/sentinel/sentinel1.conf</span>
<span class="line">  volumes:</span>
<span class="line">   - ./sentinel1.conf:/root/dockerfile/sentinel/sentinel1.conf</span>
<span class="line"> sentinel2:</span>
<span class="line">  image: redis</span>
<span class="line">  restart: always</span>
<span class="line">  container_name: redis-sentinel-2</span>
<span class="line">  network_mode: &quot;host&quot; </span>
<span class="line">  command: redis-sentinel /root/dockerfile/sentinel/sentinel2.conf</span>
<span class="line">  volumes:</span>
<span class="line">   - ./sentinel2.conf:/root/dockerfile/sentinel/sentinel2.conf</span>
<span class="line"> sentinel3:</span>
<span class="line">  image: redis</span>
<span class="line">  restart: always</span>
<span class="line">  container_name: redis-sentinel-3</span>
<span class="line">  network_mode: &quot;host&quot; </span>
<span class="line">  command: redis-sentinel /root/dockerfile/sentinel/sentinel3.conf</span>
<span class="line">  volumes:</span>
<span class="line">   - ./sentinel3.conf:/root/dockerfile/sentinel/sentinel3.conf</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>sentinel1.conf</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">port 26380</span>
<span class="line">daemonize no</span>
<span class="line">pidfile /var/run/redis-sentinel1.pid</span>
<span class="line">dir /tmp</span>
<span class="line">sentinel monitor mymaster 127.0.0.1 16380 2</span>
<span class="line">sentinel auth-pass mymaster 123456</span>
<span class="line">sentinel down-after-milliseconds mymaster 30000</span>
<span class="line">sentinel parallel-syncs mymaster 1</span>
<span class="line">sentinel failover-timeout mymaster 180000</span>
<span class="line">sentinel deny-scripts-reconfig yes</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10</p><p>sentinel2.conf</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">port 26381</span>
<span class="line">daemonize no</span>
<span class="line">pidfile /var/run/redis-sentinel2.pid</span>
<span class="line">dir /tmp</span>
<span class="line">sentinel monitor mymaster 127.0.0.1 16380 2</span>
<span class="line">sentinel auth-pass mymaster 123456</span>
<span class="line">sentinel down-after-milliseconds mymaster 30000</span>
<span class="line">sentinel parallel-syncs mymaster 1</span>
<span class="line">sentinel failover-timeout mymaster 180000</span>
<span class="line">sentinel deny-scripts-reconfig yes</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11</p><p>sentinel3.conf</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">port 26382</span>
<span class="line">daemonize no</span>
<span class="line">pidfile /var/run/redis-sentinel3.pid</span>
<span class="line">dir /tmp</span>
<span class="line">sentinel monitor mymaster 127.0.0.1 16380 2</span>
<span class="line">sentinel auth-pass mymaster 123456</span>
<span class="line">sentinel down-after-milliseconds mymaster 30000</span>
<span class="line">sentinel parallel-syncs mymaster 1</span>
<span class="line">sentinel failover-timeout mymaster 180000</span>
<span class="line">sentinel deny-scripts-reconfig yes</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11</p><p>第四步：执行启动命令 在当前目录下执行启动命令</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">docker-compose -f docker-compose.yml up -d</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210913180549154.65b12f87.png" alt="image-20210913180549154"></p><h3 id="_2-3-后端工程导入" tabindex="-1"><a class="header-anchor" href="#_2-3-后端工程导入"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_2-3-%E5%90%8E%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%AF%BC%E5%85%A5" target="_blank" rel="noopener noreferrer">#</a>2.3 后端工程导入</span></a></h3><p>将 资料夹\\资料\\后端初始项目\\jars 中的jar包install入本地仓库：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">mvn install:install-file <span class="token parameter variable">-Dfile</span><span class="token operator">=</span>./ydl-tools-common.jar <span class="token parameter variable">-DgroupId</span><span class="token operator">=</span>com.ydl <span class="token parameter variable">-DartifactId</span><span class="token operator">=</span>ydl-tools-common <span class="token parameter variable">-Dversion</span><span class="token operator">=</span><span class="token number">1.0</span>-SNAPSHOT <span class="token parameter variable">-Dpackaging</span><span class="token operator">=</span>jar</span>
<span class="line"></span>
<span class="line">mvn install:install-file <span class="token parameter variable">-Dfile</span><span class="token operator">=</span>./ydl-tools-core.jar <span class="token parameter variable">-DgroupId</span><span class="token operator">=</span>com.ydl <span class="token parameter variable">-DartifactId</span><span class="token operator">=</span>ydl-tools-core <span class="token parameter variable">-Dversion</span><span class="token operator">=</span><span class="token number">1.0</span>-SNAPSHOT <span class="token parameter variable">-Dpackaging</span><span class="token operator">=</span>jar</span>
<span class="line"></span>
<span class="line">mvn install:install-file <span class="token parameter variable">-Dfile</span><span class="token operator">=</span>./ydl-tools-databases.jar <span class="token parameter variable">-DgroupId</span><span class="token operator">=</span>com.ydl <span class="token parameter variable">-DartifactId</span><span class="token operator">=</span>ydl-tools-databases <span class="token parameter variable">-Dversion</span><span class="token operator">=</span><span class="token number">1.0</span>-SNAPSHOT <span class="token parameter variable">-Dpackaging</span><span class="token operator">=</span>jar</span>
<span class="line"></span>
<span class="line">mvn install:install-file <span class="token parameter variable">-Dfile</span><span class="token operator">=</span>./ydl-tools-dozer.jar <span class="token parameter variable">-DgroupId</span><span class="token operator">=</span>com.ydl <span class="token parameter variable">-DartifactId</span><span class="token operator">=</span>ydl-tools-dozer <span class="token parameter variable">-Dversion</span><span class="token operator">=</span><span class="token number">1.0</span>-SNAPSHOT <span class="token parameter variable">-Dpackaging</span><span class="token operator">=</span>jar</span>
<span class="line"></span>
<span class="line">mvn install:install-file <span class="token parameter variable">-Dfile</span><span class="token operator">=</span>./ydl-tools-j2cache.jar <span class="token parameter variable">-DgroupId</span><span class="token operator">=</span>com.ydl <span class="token parameter variable">-DartifactId</span><span class="token operator">=</span>ydl-tools-j2cache <span class="token parameter variable">-Dversion</span><span class="token operator">=</span><span class="token number">1.0</span>-SNAPSHOT <span class="token parameter variable">-Dpackaging</span><span class="token operator">=</span>jar</span>
<span class="line"></span>
<span class="line">mvn install:install-file <span class="token parameter variable">-Dfile</span><span class="token operator">=</span>./ydl-tools-jwt.jar <span class="token parameter variable">-DgroupId</span><span class="token operator">=</span>com.ydl <span class="token parameter variable">-DartifactId</span><span class="token operator">=</span>ydl-tools-jwt <span class="token parameter variable">-Dversion</span><span class="token operator">=</span><span class="token number">1.0</span>-SNAPSHOT <span class="token parameter variable">-Dpackaging</span><span class="token operator">=</span>jar</span>
<span class="line"></span>
<span class="line">mvn install:install-file <span class="token parameter variable">-Dfile</span><span class="token operator">=</span>./ydl-tools-log.jar <span class="token parameter variable">-DgroupId</span><span class="token operator">=</span>com.ydl <span class="token parameter variable">-DartifactId</span><span class="token operator">=</span>ydl-tools-log <span class="token parameter variable">-Dversion</span><span class="token operator">=</span><span class="token number">1.0</span>-SNAPSHOT <span class="token parameter variable">-Dpackaging</span><span class="token operator">=</span>jar</span>
<span class="line"></span>
<span class="line">mvn install:install-file <span class="token parameter variable">-Dfile</span><span class="token operator">=</span>./ydl-tools-swagger2.jar <span class="token parameter variable">-DgroupId</span><span class="token operator">=</span>com.ydl <span class="token parameter variable">-DartifactId</span><span class="token operator">=</span>ydl-tools-swagger2 <span class="token parameter variable">-Dversion</span><span class="token operator">=</span><span class="token number">1.0</span>-SNAPSHOT <span class="token parameter variable">-Dpackaging</span><span class="token operator">=</span>jar</span>
<span class="line"></span>
<span class="line">mvn install:install-file <span class="token parameter variable">-Dfile</span><span class="token operator">=</span>./ydl-tools-user.jar <span class="token parameter variable">-DgroupId</span><span class="token operator">=</span>com.ydl <span class="token parameter variable">-DartifactId</span><span class="token operator">=</span>ydl-tools-user <span class="token parameter variable">-Dversion</span><span class="token operator">=</span><span class="token number">1.0</span>-SNAPSHOT <span class="token parameter variable">-Dpackaging</span><span class="token operator">=</span>jar</span>
<span class="line"></span>
<span class="line">mvn install:install-file <span class="token parameter variable">-Dfile</span><span class="token operator">=</span>./ydl-tools-validator.jar <span class="token parameter variable">-DgroupId</span><span class="token operator">=</span>com.ydl <span class="token parameter variable">-DartifactId</span><span class="token operator">=</span>ydl-tools-validator <span class="token parameter variable">-Dversion</span><span class="token operator">=</span><span class="token number">1.0</span>-SNAPSHOT <span class="token parameter variable">-Dpackaging</span><span class="token operator">=</span>jar</span>
<span class="line"></span>
<span class="line">mvn install:install-file <span class="token parameter variable">-Dfile</span><span class="token operator">=</span>./ydl-tools-xss.jar <span class="token parameter variable">-DgroupId</span><span class="token operator">=</span>com.ydl <span class="token parameter variable">-DartifactId</span><span class="token operator">=</span>ydl-tools-xss <span class="token parameter variable">-Dversion</span><span class="token operator">=</span><span class="token number">1.0</span>-SNAPSHOT <span class="token parameter variable">-Dpackaging</span><span class="token operator">=</span>jar</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将资料中的初始工程导入开发工具，如下：</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210914111704042.878af5c7.png" alt="image-20210914111704042"></p><h3 id="_2-4-数据库" tabindex="-1"><a class="header-anchor" href="#_2-4-数据库"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_2-4-%E6%95%B0%E6%8D%AE%E5%BA%93" target="_blank" rel="noopener noreferrer">#</a>2.4 数据库</span></a></h3><p>数据库脚本位于导入的初始工程<code>/docs/mysql/ydl-sms.sql</code>，创建ydl_sms数据库并执行ydl-sms.sql脚本文件完成建表操作。创建完成后可以看到如下表：</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210914111857698.46a16fe7.png" alt="image-20210914111857698"></p><h3 id="_2-5-前端工程" tabindex="-1"><a class="header-anchor" href="#_2-5-前端工程"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_2-5-%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B" target="_blank" rel="noopener noreferrer">#</a>2.5 前端工程</span></a></h3><p>前端工程采用vue2 + ts + spa架构，前端工程在资料中已经提供，位置为：<code>/资料/前端工程</code></p><ol><li><p>前端代码结构和核心代码</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210914114002904.4e51013b.png" alt="image-20210914114002904"></p></li><li><p>编译、运行前端代码</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">npm install</span>
<span class="line">npm run serve</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2</p></li></ol><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210914112925481.3b82f420.png" alt="image-20210914112925481"></p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210914113139513.1aa9d6f1.png" alt="image-20210914113139513"></p><p>登陆页面效果</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916201900615.d4c8c1db.png" alt="image-20210916201900615"></p><p>进入效果</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916201911039.7c876a07.png" alt="image-20210916201911039"></p><h2 id="_3-后台管理服务" tabindex="-1"><a class="header-anchor" href="#_3-后台管理服务"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1" target="_blank" rel="noopener noreferrer">#</a>3. 后台管理服务</span></a></h2><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916095249795.37c3be0d.png" alt="image-20210916095249795"></p><h3 id="_3-1-项目结构" tabindex="-1"><a class="header-anchor" href="#_3-1-项目结构"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-1-%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84" target="_blank" rel="noopener noreferrer">#</a>3.1. 项目结构</span></a></h3><h4 id="_3-1-1-基础工程" tabindex="-1"><a class="header-anchor" href="#_3-1-1-基础工程"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-1-1-%E5%9F%BA%E7%A1%80%E5%B7%A5%E7%A8%8B" target="_blank" rel="noopener noreferrer">#</a>3.1.1 基础工程</span></a></h4><p>基础工程为ydl-sms-entity工程，主要是一些实体类、DTO、工具类、Mapper接口等，作为基础模块，其他几个服务都会依赖此基础模块。</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916220116083.f9647338.png" alt="image-20210916220116083"></p><p><strong>注意</strong>：dto entity vo 关系图</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916221225307.6a51f36a.png" alt="image-20210916221225307"></p><h4 id="_3-1-2-管理端工程" tabindex="-1"><a class="header-anchor" href="#_3-1-2-管理端工程"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-1-2-%E7%AE%A1%E7%90%86%E7%AB%AF%E5%B7%A5%E7%A8%8B" target="_blank" rel="noopener noreferrer">#</a>3.1.2 管理端工程</span></a></h4><p>ydl-sms-manage作为后台管理服务的maven工程，主要功能是对基础数据进行维护操作，例如签名管理、模板管理、通道管理、通道优先级配置、数据统计等。</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916220303128.fc7c1102.png" alt="image-20210916220303128"></p><h3 id="_3-2-功能清单" tabindex="-1"><a class="header-anchor" href="#_3-2-功能清单"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-2-%E5%8A%9F%E8%83%BD%E6%B8%85%E5%8D%95" target="_blank" rel="noopener noreferrer">#</a>3.2. 功能清单</span></a></h3><p>下图展示了后台管理服务实现的功能清单：</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916224738144.fee7fde4.png" alt="image-20210916224738144"></p><h3 id="_3-3-数据模型与类" tabindex="-1"><a class="header-anchor" href="#_3-3-数据模型与类"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-3-%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B%E4%B8%8E%E7%B1%BB" target="_blank" rel="noopener noreferrer">#</a>3.3. 数据模型与类</span></a></h3><table><thead><tr><th>序号</th><th>表名</th><th>类名</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>signature</td><td>SignatureEntity</td><td>短信签名</td></tr><tr><td>2</td><td>template</td><td>TemplateEntity</td><td>短信模板</td></tr><tr><td>3</td><td>config</td><td>ConfigEntity</td><td>短信通道配置</td></tr><tr><td>4</td><td>config_signature</td><td>ConfigSignatureEntity</td><td>通道与签名关系</td></tr><tr><td>5</td><td>config_template</td><td>ConfigTemplateEntity</td><td>通道与模板关系</td></tr><tr><td>6</td><td>platform</td><td>PlatformEntity</td><td>接入平台(应用管理)</td></tr><tr><td>7</td><td>receive_log</td><td>ReceiveLogEntity</td><td>短信接收日志</td></tr><tr><td>8</td><td>manual_process</td><td>ManualProcessEntity</td><td>人工处理任务</td></tr><tr><td>9</td><td>send_log</td><td>SendLogEntity</td><td>短信发送日志</td></tr><tr><td>10</td><td>black_list</td><td>BlackListEntity</td><td>黑名单</td></tr><tr><td>11</td><td>timing_push</td><td>TimingPushEntity</td><td>定时发送</td></tr></tbody></table><p>名词解释：</p><ul><li>短信签名：是指主叫用户在发送短信过程中，附加主叫用户的个性化签名，发送到被叫手机用户的业务。</li></ul><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916194042731.a1d97f78.png" alt="image-20210916194042731"></p><ul><li>短信模板：即具体发送的短信内容，短信模版通常可以支持验证码、通知、推广三种短信类型。</li></ul><p>举例：尊敬的【变量a】先生，您尾号为【变量b】的卡，消费了【变量c】元。【农业银行】</p><ul><li>短信通道：指第三方短信平台，例如阿里云短信、乐信短信、梦网短信等。</li></ul><h3 id="_3-4-基础属性自动注入" tabindex="-1"><a class="header-anchor" href="#_3-4-基础属性自动注入"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-4-%E5%9F%BA%E7%A1%80%E5%B1%9E%E6%80%A7%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%85%A5" target="_blank" rel="noopener noreferrer">#</a>3.4. 基础属性自动注入</span></a></h3><p><strong>功能</strong>：通过自定义注解和切面，在进行数据维护时实现实体中基础属性的自动赋值（创建者、创建时间、修改者、修改者）。</p><h4 id="_3-4-1-基础属性" tabindex="-1"><a class="header-anchor" href="#_3-4-1-基础属性"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-4-1-%E5%9F%BA%E7%A1%80%E5%B1%9E%E6%80%A7" target="_blank" rel="noopener noreferrer">#</a>3.4.1 基础属性</span></a></h4><p>基础实体类，业务实体类的基类：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>base</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">TableId</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiModelProperty</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Serializable</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 基础实体类，所有实体都需要继承</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Data</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">BaseEntity</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@TableId</span></span>
<span class="line">    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;主键&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;创建时间&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;创建人&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> createUser <span class="token operator">=</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;修改时间&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> updateTime<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;修改人&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> updateUser<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;逻辑删除：0删除&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Integer</span> isDelete<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35</p><h4 id="_3-4-2-自定义注解" tabindex="-1"><a class="header-anchor" href="#_3-4-2-自定义注解"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-4-2-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3" target="_blank" rel="noopener noreferrer">#</a>3.4.2 自定义注解</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Documented</span></span>
<span class="line"><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">DefaultParams</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5</p><h4 id="_3-4-3-定义切面类" tabindex="-1"><a class="header-anchor" href="#_3-4-3-定义切面类"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-4-3-%E5%AE%9A%E4%B9%89%E5%88%87%E9%9D%A2%E7%B1%BB" target="_blank" rel="noopener noreferrer">#</a>3.4.3 定义切面类</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 通过切面方式，自定义注解，实现实体基础数据的注入（创建者、创建时间、修改者、修改时间）</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token annotation punctuation">@Aspect</span></span>
<span class="line"><span class="token annotation punctuation">@Slf4j</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultParamsAspect</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@SneakyThrows</span></span>
<span class="line">    <span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span><span class="token string">&quot;@annotation(com.itheima.sms.annotation.DefaultParams)&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeEvent</span><span class="token punctuation">(</span><span class="token class-name">JoinPoint</span> point<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//从threadlocal中获取用户id</span></span>
<span class="line">        <span class="token class-name">Long</span> userId <span class="token operator">=</span> <span class="token class-name">BaseContextHandler</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>userId <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            userId <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token operator">=</span> point<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> args<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> classes <span class="token operator">=</span> args<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">Object</span> id <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">Method</span> method <span class="token operator">=</span> <span class="token function">getMethod</span><span class="token punctuation">(</span>classes<span class="token punctuation">,</span> <span class="token string">&quot;getId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                id <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">//请求操作的对象的id为空时，为创建操作</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                method <span class="token operator">=</span> <span class="token function">getMethod</span><span class="token punctuation">(</span>classes<span class="token punctuation">,</span> <span class="token string">&quot;setCreateUser&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> userId<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                method <span class="token operator">=</span> <span class="token function">getMethod</span><span class="token punctuation">(</span>classes<span class="token punctuation">,</span> <span class="token string">&quot;setCreateTime&quot;</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">//新建修改更新</span></span>
<span class="line">            method <span class="token operator">=</span> <span class="token function">getMethod</span><span class="token punctuation">(</span>classes<span class="token punctuation">,</span> <span class="token string">&quot;setUydlateUser&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> userId<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            method <span class="token operator">=</span> <span class="token function">getMethod</span><span class="token punctuation">(</span>classes<span class="token punctuation">,</span> <span class="token string">&quot;setUydlateTime&quot;</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Method</span> <span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token class-name">Class</span> classes<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> types<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> classes<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> types<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchMethodException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-4-4-使用注解" tabindex="-1"><a class="header-anchor" href="#_3-4-4-使用注解"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-4-4-%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3" target="_blank" rel="noopener noreferrer">#</a>3.4.4 使用注解</span></a></h4><p>在Controller方法上添加注解，保存基础属性。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@PostMapping</span></span>
<span class="line"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;保存&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@DefaultParams</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">ObjectEntity</span> entity<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">//具体实现逻辑...</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7</p><h3 id="_3-5-redis发布订阅模式" tabindex="-1"><a class="header-anchor" href="#_3-5-redis发布订阅模式"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-5-redis%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F" target="_blank" rel="noopener noreferrer">#</a>3.5. Redis发布订阅模式</span></a></h3><p>Redis 发布订阅 (pub/sub) 是一种消息通信模式：发送者 (pub) 发送消息，订阅者 (sub) 接收消息。Redis 客户端可以订阅任意数量的频道。</p><p>Redis的发布订阅模式本质和传统的MQ的发布订阅类似，但是相对于其它几款MQ产品来说，redis的使用更加便捷，也更加轻量化，不需要单独去搭建集成一套繁重的MQ框架。但缺点也很明显，redis发布的消息不会持久化，所以当某一台服务器出现问题的时候，这个消息会丢失，所以在考虑使用之前要慎重，当前的业务是否对数据一致性要求很高，如果要求很高，还是建议使用MQ产品。</p><p>在发布者订阅者模式下，发布者将消息发布到指定的 channel 里面， 凡是监听该 channel 的消费者都会收到同样的一份消息，这种模式类似于是收音机模式，即凡是收听某个频道的听众都会收到主持人发布的相同的消息内容。 此模式常用于群聊天、 群通知、群公告等场景。</p><p>发布订阅模式下的几个概念：</p><ul><li>Publisher： 发布者</li><li>Subscriber：订阅者</li><li>Channel： 频道</li></ul><p>下图展示了频道 channel1 ， 以及订阅这个频道的三个客户端 —— client1、 client2 和 client3 之间的关系：</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210922171439646.c9709474.png" alt="image-20210922171439646"></p><p>当有新消息通过 PUBLISH 命令发送给频道 channel1 时， 这个消息就会被发送给订阅它的三个客户端：</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210922171712064.e4f57fbf.png" alt="image-20210922171712064"></p><h4 id="_3-5-1-案例演示" tabindex="-1"><a class="header-anchor" href="#_3-5-1-案例演示"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-5-1-%E6%A1%88%E4%BE%8B%E6%BC%94%E7%A4%BA" target="_blank" rel="noopener noreferrer">#</a>3.5.1 案例演示</span></a></h4><p>1.首先远程启动redis服务启动</p><p>2.启动4个客户端 redis-cli</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">redis-cli.exe -h 192.168.200.131 -p 16380 -a 123456</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p>3.将其中三个客户端设置监听频道 test</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">subscribe ydlchannel</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210922172222994.5efc86a4.png" alt="image-20210922172222994"></p><p>4.将第四个客户端作为消息发布的客户端，向频道 ydlchannel发布消息</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">publish ydlchannel &#39;im itlilaoshi&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p>可以看到另外三个客户端都收到了消息</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210922172441645.d471fdfc.png" alt="image-20210922172441645"></p><h4 id="_3-5-2-代码案例" tabindex="-1"><a class="header-anchor" href="#_3-5-2-代码案例"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-5-2-%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B" target="_blank" rel="noopener noreferrer">#</a>3.5.2 代码案例</span></a></h4><p>1、导入spring-boot-starter-data-redis依赖</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4</p><p>2、编写消息监听器，作为消息的订阅者</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>listener</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>connection<span class="token punctuation">.</span></span><span class="token class-name">Message</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>connection<span class="token punctuation">.</span></span><span class="token class-name">MessageListener</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 自定义消息监听器，用于监听Redis频道中的消息</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token annotation punctuation">@Slf4j</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyListener</span> <span class="token keyword">implements</span> <span class="token class-name">MessageListener</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 监听方法</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">message</span></span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">pattern</span></span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token class-name">Message</span> message<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> pattern<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收到消息：&quot;</span> <span class="token operator">+</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、编写订阅发布模式的容器配置</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">MyListener</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">AutoConfigureAfter</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>connection<span class="token punctuation">.</span></span><span class="token class-name">RedisConnectionFactory</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">PatternTopic</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">RedisMessageListenerContainer</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>listener<span class="token punctuation">.</span>adapter<span class="token punctuation">.</span></span><span class="token class-name">MessageListenerAdapter</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 订阅发布模式的容器配置</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token annotation punctuation">@AutoConfigureAfter</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">MyListener</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SubscriberConfig</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">MyListener</span> myListener<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 创建消息监听容器</span>
<span class="line">     *</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">redisConnectionFactory</span></span>
<span class="line">     * <span class="token keyword">@return</span></span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">RedisMessageListenerContainer</span> <span class="token function">getRedisMessageListenerContainer</span><span class="token punctuation">(</span><span class="token class-name">RedisConnectionFactory</span> redisConnectionFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">RedisMessageListenerContainer</span> redisMessageListenerContainer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisMessageListenerContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        redisMessageListenerContainer<span class="token punctuation">.</span><span class="token function">setConnectionFactory</span><span class="token punctuation">(</span>redisConnectionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//可以添加多个监听订阅频道</span></span>
<span class="line">        <span class="token comment">//当前监听的是通道：MYTOPIC</span></span>
<span class="line">        redisMessageListenerContainer<span class="token punctuation">.</span><span class="token function">addMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerAdapter</span><span class="token punctuation">(</span>myListener<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">PatternTopic</span><span class="token punctuation">(</span><span class="token string">&quot;MYTOPIC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> redisMessageListenerContainer<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4、编写消息发布者</p><ul><li>通过redis客户端发送消息</li></ul><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210922182117550.f0162cfe.png" alt="image-20210922182117550"></p><ul><li>通过Java代码发送消息</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span></span><span class="token class-name">SmsManageApplication</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span></span><span class="token class-name">RunWith</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">SpringBootTest</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">RedisTemplate</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span></span><span class="token class-name">SpringRunner</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token class-name">SmsManageApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisTest</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//@Test</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            redisTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;MYTOPIC&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;im itlilaoshi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-6-通道管理" tabindex="-1"><a class="header-anchor" href="#_3-6-通道管理"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-6-%E9%80%9A%E9%81%93%E7%AE%A1%E7%90%86" target="_blank" rel="noopener noreferrer">#</a>3.6. 通道管理</span></a></h3><h4 id="_3-6-1-产品原型" tabindex="-1"><a class="header-anchor" href="#_3-6-1-产品原型"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-6-1-%E4%BA%A7%E5%93%81%E5%8E%9F%E5%9E%8B" target="_blank" rel="noopener noreferrer">#</a>3.6.1 产品原型</span></a></h4><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210922182054655.e855759f.png" alt="image-20210922182054655"></p><h4 id="_3-6-2-需求分析" tabindex="-1"><a class="header-anchor" href="#_3-6-2-需求分析"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-6-2-%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90" target="_blank" rel="noopener noreferrer">#</a>3.6.2 需求分析</span></a></h4><ul><li>通道信息增、删、改、查（分页、详情）</li><li>通道排序：通过拖动对前端通道进行排序</li><li>关联通道与短信签名：一个通道可以有多个签名</li><li>关联通道与短信模板：一个通道可以有多个模板</li><li>通道优先级排序后通知短信发送服务，更新缓存中的通道优先级</li></ul><h4 id="_3-6-3-具体实现" tabindex="-1"><a class="header-anchor" href="#_3-6-3-具体实现"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-6-3-%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0" target="_blank" rel="noopener noreferrer">#</a>3.6.3 具体实现</span></a></h4><p>管理端服务有一个场景使用了redis的发布订阅模式：短信通道的优先级发生变化（如人工设置）后，通过redis发布订阅模式通知短信发送服务，短信发送服务接收到消息后自动调整短信发送时使用的通道的优先级（短信发送服务缓存了短信通道的配置信息）。</p><p>基础代码都已经实现，此处只需要实现通道排序后通知短信发送服务的代码即可。也就是ConfigServiceImpl类的sendUpdateMessage方法。</p><p>短信发送服务业务逻辑说明：</p><p>1、为了保证短信发送服务的可用性，在短信发送服务启动时会自动生成当前服务实例的一个uuid作为服务标识保存到redis中，并且每隔3分钟上报服务信息证明服务状态正常</p><p>2、短信发送服务启动后会每隔10分钟检查redis中的服务上报信息，如果某个实例超过5分钟没有上报则认为此服务下线，就会从redis中将此服务实例信息删除</p><p>3、短信发送服务在启动时会从数据库中查询出可用通道列表并按照优先级排序，然后缓存到redis中</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">//发送消息，通知短信发送服务更新缓存中的通道优先级</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendUpdateMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">//获得所有注册到redis中的短信发送服务实例</span></span>
<span class="line">    <span class="token class-name">Map</span> map <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token string">&quot;SERVER_ID_HASH&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;全部服务：{}&quot;</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Long</span> current <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Object</span> key <span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">long</span> valueLong <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//五分钟内报告，说明短信发送服务状态正常</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">-</span> valueLong <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//删除redis中缓存的可用通道，因为通道优先级发生变化，redis中缓存的可用通道需要重新加载</span></span>
<span class="line">            redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&quot;listForConnect&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">//发布消息</span></span>
<span class="line">            redisTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;TOPIC_HIGH_SERVER&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                                         <span class="token class-name">ServerTopic</span></span>
<span class="line">                                         <span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                                         <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token class-name">ServerTopic</span><span class="token punctuation">.</span><span class="token constant">INIT_CONNECT</span><span class="token punctuation">)</span></span>
<span class="line">                                         <span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                                         <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                                         <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                                        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;发送消息通知短信发送服务重新构建通道&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第2章-短信接收服务" tabindex="-1"><a class="header-anchor" href="#第2章-短信接收服务"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#%E7%AC%AC2%E7%AB%A0-%E7%9F%AD%E4%BF%A1%E6%8E%A5%E6%94%B6%E6%9C%8D%E5%8A%A1" target="_blank" rel="noopener noreferrer">#</a>第2章 短信接收服务</span></a></h2><h2 id="_1-短信接收服务介绍" tabindex="-1"><a class="header-anchor" href="#_1-短信接收服务介绍"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_1-%E7%9F%AD%E4%BF%A1%E6%8E%A5%E6%94%B6%E6%9C%8D%E5%8A%A1%E4%BB%8B%E7%BB%8D" target="_blank" rel="noopener noreferrer">#</a>1. 短信接收服务介绍</span></a></h2><p>短信接收服务的作用就是为应用提供访问接口，应用需要发送短信时只需要调用短信接收服务，由短信接收服务将信息保存到消息缓冲区（Mysql、Redis）。后续会由短信发送服务从消息缓冲区获取消息并发送短信。</p><p>动力短信短信平台整体架构：</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916095249795.37c3be0d.png" alt="image-20210916095249795"></p><p>动力短信短信平台业务架构：</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210916100828128.572bb5db.png" alt="image-20210916100828128"></p><p>通过上面的业务架构可以看到，短信接收服务（pd-sms-api）提供3种方式供业务系统调用：</p><ul><li>HTTP接口</li><li>TCP</li><li>SDK形式</li></ul><p>短信接收服务通过资质验证（可开关）、短信内容校验后将短信信息发送到对应中间件中（Redis、MySQL）。</p><p>短信发送方式分为两种类型：</p><p>1、定时发送短信：将短信内容存储到MySQL数据库中，由短信发送服务通过定时任务获取并发送 2、普通短信：将短信内容推送到Redis队列中，由短信发送服务异步接收并发送</p><h2 id="_2-redis消息队列" tabindex="-1"><a class="header-anchor" href="#_2-redis消息队列"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_2-redis%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97" target="_blank" rel="noopener noreferrer">#</a>2. Redis消息队列</span></a></h2><h3 id="_2-1-redis队列介绍" tabindex="-1"><a class="header-anchor" href="#_2-1-redis队列介绍"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_2-1-redis%E9%98%9F%E5%88%97%E4%BB%8B%E7%BB%8D" target="_blank" rel="noopener noreferrer">#</a>2.1 Redis队列介绍</span></a></h3><p>Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。</p><p>Redis的list是简单的字符串列表，按照插入顺序排序。可以添加一个元素到列表的头部（左边）或者尾部（右边）。</p><p>使用Redis的list可以模拟消息队列，即使用<strong>rpush</strong>和<strong>lpush</strong>命令将数据插入队列（生产消息），使用<strong>lpop</strong>和<strong>rpop</strong>命令将数据弹出队列（消费消息）。</p><p>队列中的消息可以由不同的生产者写入，也可以由不同的消费者消费，但是一个消息一定是只能被消费一次。</p><p>redis所有命令，可从官网查看：http://redis.cn/commands.html#list</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210923092616090.47c54f2f.png" alt="image-20210923092616090"></p><h3 id="_2-2-案例演示" tabindex="-1"><a class="header-anchor" href="#_2-2-案例演示"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_2-2-%E6%A1%88%E4%BE%8B%E6%BC%94%E7%A4%BA" target="_blank" rel="noopener noreferrer">#</a>2.2 案例演示</span></a></h3><p>发布消息：</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre><code><span class="line">root@<span class="token number">77889</span>f10b0c8<span class="token operator">:</span><span class="token operator">/</span>data<span class="token comment"># redis-cli</span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">LPUSH</span> ydllist msg1</span>
<span class="line"><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">LPUSH</span> ydllist msg2</span>
<span class="line"><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">LPUSH</span> ydllist msg3</span>
<span class="line"><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">LPUSH</span> ydllist msg4</span>
<span class="line"><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">LPUSH</span> ydllist msg5</span>
<span class="line"><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看消息：</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre><code><span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">LRANGE</span> ydllist <span class="token number">0</span> <span class="token operator">-</span><span class="token number">1</span></span>
<span class="line"><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string-literal"><span class="token string">&quot;msg5&quot;</span></span></span>
<span class="line"><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string-literal"><span class="token string">&quot;msg4&quot;</span></span></span>
<span class="line"><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string-literal"><span class="token string">&quot;msg3&quot;</span></span></span>
<span class="line"><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string-literal"><span class="token string">&quot;msg2&quot;</span></span></span>
<span class="line"><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string-literal"><span class="token string">&quot;msg1&quot;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6</p><p>消费消息：</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre><code><span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">RPOP</span> ydllist</span>
<span class="line"><span class="token string-literal"><span class="token string">&quot;msg1&quot;</span></span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">RPOP</span> ydllist</span>
<span class="line"><span class="token string-literal"><span class="token string">&quot;msg2&quot;</span></span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">LRANGE</span> ydllist <span class="token number">0</span> <span class="token operator">-</span><span class="token number">1</span></span>
<span class="line"><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string-literal"><span class="token string">&quot;msg5&quot;</span></span></span>
<span class="line"><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string-literal"><span class="token string">&quot;msg4&quot;</span></span></span>
<span class="line"><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string-literal"><span class="token string">&quot;msg3&quot;</span></span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">RPOP</span> ydllist</span>
<span class="line"><span class="token string-literal"><span class="token string">&quot;msg3&quot;</span></span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">RPOP</span> ydllist</span>
<span class="line"><span class="token string-literal"><span class="token string">&quot;msg4&quot;</span></span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">RPOP</span> ydllist</span>
<span class="line"><span class="token string-literal"><span class="token string">&quot;msg5&quot;</span></span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">RPOP</span> ydllist</span>
<span class="line"><span class="token punctuation">(</span><span class="token keyword">nil</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">LRANGE</span> channel1 <span class="token number">0</span> <span class="token operator">-</span><span class="token number">1</span></span>
<span class="line"><span class="token punctuation">(</span>empty list <span class="token keyword">or</span> set<span class="token punctuation">)</span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>RPOP命令不具有阻塞功能，如果需要阻塞功能可以使用BRPOP命令。</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210923105449996.c59b3a97.png" alt="image-20210923105449996"></p><h3 id="_2-3-代码案例" tabindex="-1"><a class="header-anchor" href="#_2-3-代码案例"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_2-3-%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B" target="_blank" rel="noopener noreferrer">#</a>2.3 代码案例</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span></span><span class="token class-name">SmsApiApplication</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span></span><span class="token class-name">RunWith</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">SpringBootTest</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">RedisTemplate</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span></span><span class="token class-name">SpringRunner</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token class-name">SmsApiApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisListTest</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//消息发送者</span></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testPush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leftPush</span><span class="token punctuation">(</span><span class="token string">&quot;ydllist123&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;msg&quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//消息消费者</span></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testPop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">11</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Object</span> value <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rightPop</span><span class="token punctuation">(</span><span class="token string">&quot;ydllist123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;取出的值是：&quot;</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//消费者阻塞监听队列</span></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testPopBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">       <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">           <span class="token class-name">Object</span> value <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rightPop</span><span class="token punctuation">(</span><span class="token string">&quot;ydllist123&quot;</span><span class="token punctuation">,</span> <span class="token number">10L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">           <span class="token comment">//业务逻辑</span></span>
<span class="line">           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;取出的值是：&quot;</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">       <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-短信接收服务" tabindex="-1"><a class="header-anchor" href="#_3-短信接收服务"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-%E7%9F%AD%E4%BF%A1%E6%8E%A5%E6%94%B6%E6%9C%8D%E5%8A%A1" target="_blank" rel="noopener noreferrer">#</a>3. 短信接收服务</span></a></h2><h3 id="_3-1-需求分析-重点" tabindex="-1"><a class="header-anchor" href="#_3-1-需求分析-重点"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-1-%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90-%E9%87%8D%E7%82%B9" target="_blank" rel="noopener noreferrer">#</a>3.1 需求分析-重点</span></a></h3><p><strong>功能需求：</strong></p><ul><li>应用系统调用短信接收服务提供的接口，由短信接收服务将信息保存到消息缓冲区（Mysql、Redis）</li><li>调用方式：HTTP、TCP、SDK</li></ul><p><strong>处理流程：</strong></p><p>短信接收服务接收到应用系统请求后，会进行相关的校验处理，校验通过则将信息保存到消息缓存区，具体处理流程如下：</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210923174235681.d50d045a.png" alt="image-20210923174235681"></p><h3 id="_3-2-项目结构" tabindex="-1"><a class="header-anchor" href="#_3-2-项目结构"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-2-%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84" target="_blank" rel="noopener noreferrer">#</a>3.2 项目结构</span></a></h3><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210923100907654.c30c191f.png" alt="image-20210923100907654"></p><h3 id="_3-3-数据模型与类-1" tabindex="-1"><a class="header-anchor" href="#_3-3-数据模型与类-1"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-3-%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B%E4%B8%8E%E7%B1%BB-1" target="_blank" rel="noopener noreferrer">#</a>3.3 数据模型与类</span></a></h3><table><thead><tr><th>序号</th><th>表名</th><th>类名</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>signature</td><td>SignatureEntity</td><td>短信签名</td></tr><tr><td>2</td><td>template</td><td>TemplateEntity</td><td>短信模板</td></tr><tr><td>3</td><td>config</td><td>ConfigEntity</td><td>短信通道配置</td></tr><tr><td>4</td><td>config_signature</td><td>ConfigSignatureEntity</td><td>通道与签名关系</td></tr><tr><td>5</td><td>config_template</td><td>ConfigTemplateEntity</td><td>通道与模板关系</td></tr><tr><td>6</td><td>platform</td><td>PlatformEntity</td><td>接入平台(应用管理)</td></tr><tr><td>7</td><td>receive_log</td><td>ReceiveLogEntity</td><td>短信接收日志</td></tr><tr><td>8</td><td>black_list</td><td>BlackListEntity</td><td>黑名单</td></tr><tr><td>9</td><td>timing_push</td><td>TimingPushEntity</td><td>定时发送</td></tr></tbody></table><p>注意：此处只是列出和短信接收服务有关的数据模型和类。</p><h3 id="_3-4-消息存储" tabindex="-1"><a class="header-anchor" href="#_3-4-消息存储"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-4-%E6%B6%88%E6%81%AF%E5%AD%98%E5%82%A8" target="_blank" rel="noopener noreferrer">#</a>3.4 消息存储</span></a></h3><p>导入的初始工程中已经实现了大部分代码，主要逻辑为通过Controller提供HTTP接口服务接收应用系统请求，然后调用Service，在Service中进行一系列校验，如果校验通过则需要将消息保存到消息缓冲区。</p><p><strong>将消息保存到消息缓冲区的业务逻辑为：</strong></p><p>1、进行短信分类，分为实时发送短信和定时发送短信</p><p>2、如果是定时发送短信则将消息保存到Mysql数据库</p><p>3、如果是实时发送短信则将消息保存到Redis队列，判断短信模板类型，如果是验证码类型则将消息保存到高优先级队列TOPIC_HIGH_SMS，如果是其他类型则将消息保存到普通队列TOPIC_GENERAL_SMS</p><p>4、保存短信接收日志到Mysql数据库</p><p><strong>具体实现代码如下（SmsSendServiceImpl类的pushSmsMessage方法）：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">//缺啥补啥</span></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 根据短信模板分类 并分发</span>
<span class="line">     *</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">templateEntity</span></span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">smsSendDTO</span></span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">platformEntity</span></span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">pushSmsMessage</span><span class="token punctuation">(</span><span class="token class-name">TemplateEntity</span> templateEntity<span class="token punctuation">,</span> <span class="token class-name">SmsSendDTO</span> smsSendDTO<span class="token punctuation">,</span> <span class="token class-name">PlatformEntity</span> platformEntity<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// TODO 短信接收服务：将短信信息保存到数据库或者Redis队列</span></span>
<span class="line">        <span class="token class-name">ReceiveLogEntity</span> receiveLogEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReceiveLogEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        receiveLogEntity<span class="token punctuation">.</span><span class="token function">setApiLogId</span><span class="token punctuation">(</span><span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//1、进行短信分类，分为实时发送短信和定时发送短信</span></span>
<span class="line">            <span class="token class-name">String</span> sendTime <span class="token operator">=</span> smsSendDTO<span class="token punctuation">.</span><span class="token function">getSendTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">String</span> request <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>smsSendDTO<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>sendTime<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">//2、如果是定时发送短信则将消息保存到Mysql数据库</span></span>
<span class="line">                <span class="token class-name">TimingPushEntity</span> timingPushEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TimingPushEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                timingPushEntity<span class="token punctuation">.</span><span class="token function">setMobile</span><span class="token punctuation">(</span>smsSendDTO<span class="token punctuation">.</span><span class="token function">getMobile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                timingPushEntity<span class="token punctuation">.</span><span class="token function">setTemplate</span><span class="token punctuation">(</span>smsSendDTO<span class="token punctuation">.</span><span class="token function">getTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                timingPushEntity<span class="token punctuation">.</span><span class="token function">setRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                timingPushEntity<span class="token punctuation">.</span><span class="token function">setSignature</span><span class="token punctuation">(</span>smsSendDTO<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                timingPushEntity<span class="token punctuation">.</span><span class="token function">setTiming</span><span class="token punctuation">(</span>sendTime<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">                timingPushService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>timingPushEntity<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">//3、如果是实时发送短信则将消息保存到Redis队列，判断短信模板类型，如果是验证码类型则将消息保存到高优先级队列TOPIC_HIGH_SMS，如果是其他类型则将消息保存到普通队列TOPIC_GENERAL_SMS</span></span>
<span class="line"></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>templateEntity<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">TemplateType</span><span class="token punctuation">.</span><span class="token constant">VERIFICATION</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token comment">//您的验证码是\${code}</span></span>
<span class="line">                    redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leftPush</span><span class="token punctuation">(</span><span class="token string">&quot;TOPIC_HIGH_SMS&quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token comment">//理财产品\${product}</span></span>
<span class="line">                    redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leftPush</span><span class="token punctuation">(</span><span class="token string">&quot;TOPIC_GENERAL_SMS&quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            receiveLogEntity<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            receiveLogEntity<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            receiveLogEntity<span class="token punctuation">.</span><span class="token function">setError</span><span class="token punctuation">(</span><span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">getErrorStackTrace</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//4、保存短信接收日志到Mysql数据库</span></span>
<span class="line">            receiveLogEntity<span class="token punctuation">.</span><span class="token function">setPlatformId</span><span class="token punctuation">(</span>platformEntity<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            receiveLogEntity<span class="token punctuation">.</span><span class="token function">setPlatformName</span><span class="token punctuation">(</span>platformEntity<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            receiveLogEntity<span class="token punctuation">.</span><span class="token function">setBusiness</span><span class="token punctuation">(</span>smsSendDTO<span class="token punctuation">.</span><span class="token function">getBatchCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            receiveLogEntity<span class="token punctuation">.</span><span class="token function">setConfigIds</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>smsSendDTO<span class="token punctuation">.</span><span class="token function">getConfigIds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[1,2,3]---&gt;1,2,3</span></span>
<span class="line">            receiveLogEntity<span class="token punctuation">.</span><span class="token function">setTemplate</span><span class="token punctuation">(</span>smsSendDTO<span class="token punctuation">.</span><span class="token function">getTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            receiveLogEntity<span class="token punctuation">.</span><span class="token function">setSignature</span><span class="token punctuation">(</span>smsSendDTO<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            receiveLogEntity<span class="token punctuation">.</span><span class="token function">setMobile</span><span class="token punctuation">(</span>smsSendDTO<span class="token punctuation">.</span><span class="token function">getMobile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            receiveLogEntity<span class="token punctuation">.</span><span class="token function">setRequest</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>smsSendDTO<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            receiveLogEntity<span class="token punctuation">.</span><span class="token function">setUseTime</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            receiveLogMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>receiveLogEntity<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58</p><p>测试：</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210924114955634.fe15e5da.png" alt="image-20210924114955634"></p><h3 id="_3-5-tcp接口" tabindex="-1"><a class="header-anchor" href="#_3-5-tcp接口"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-5-tcp%E6%8E%A5%E5%8F%A3" target="_blank" rel="noopener noreferrer">#</a>3.5 TCP接口</span></a></h3><p>基于Netty进行网络编程，为短信接收服务提供<strong>TCP接口</strong>，应用系统可以通过TCP调用此接口来和短信接收服务对接。</p><p>涉及到的类：</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210924114505723.89d34225.png" alt="image-20210924114505723"></p><ul><li>Netty服务启动类：用于启动Netty服务</li><li>通道初始化器：主要目的是为程序员提供一个简单的工具，用于在某个Channel注册到EventLoop后，对这个Channel执行一些初始化操作，例如可以添加用户自定义的服务端处理器</li><li>服务端处理器：具体执行处理逻辑，例如读取消息</li></ul><p>导入的初始工程中主体代码已经完成，只需要实现服务端处理器的具体处理逻辑即可（NettyServerHandler的channelRead0方法）：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">//业务逻辑</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">channelRead0</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span> ctx<span class="token punctuation">,</span> <span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// TODO 短信接收服务：接收应用系统的报文并解析，调用Service将消息保存到消息缓冲区</span></span>
<span class="line">        <span class="token comment">//就是和controller一样 调用service层即可</span></span>
<span class="line">        <span class="token class-name">String</span> restMsg<span class="token operator">=</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;tcp接口接受到消息:&quot;</span><span class="token operator">+</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//1sring msg--&gt; SmsParamsDTO</span></span>
<span class="line">            <span class="token class-name">SmsParamsDTO</span> smsParamsDTO <span class="token operator">=</span> <span class="token function">parseMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">==</span>smsParamsDTO<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;报文解析失败！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token comment">//2调用service层即可</span></span>
<span class="line">            <span class="token class-name">SpringUtils</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">SmsSendService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>smsParamsDTO<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;netty发送时，报错了！&quot;</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            restMsg<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;回推报文=============&quot;</span><span class="token operator">+</span>restMsg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        ctx<span class="token punctuation">.</span><span class="token function">writeAndFlush</span><span class="token punctuation">(</span>restMsg<span class="token operator">+</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//为什么要加\\n 不加客户端接收不到消息</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25</p><p>测试：</p><p>打开telnet功能</p><p>公众号添加“IT李哥交朋友”，定期技术分享哦。</p><p>可以使用telnet作为Netty客户端来测试Netty服务，报文如下：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span><span class="token property">&quot;accessKeyId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dcbd824751cf448fa0b569f1f07b9b32&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;encryption&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2f2e4da7fffd4391a9aaabd594f37db3&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;mobile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;15718888888&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;params&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token property">&quot;code&quot;</span><span class="token operator">:</span><span class="token string">&quot;79857&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token property">&quot;signature&quot;</span><span class="token operator">:</span> <span class="token string">&quot;DXQM_000000001&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;template&quot;</span><span class="token operator">:</span> <span class="token string">&quot;DXMB_000000001&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;timestamp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;sendTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2021-12-25 12:00&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><h3 id="_3-6-sdk" tabindex="-1"><a class="header-anchor" href="#_3-6-sdk"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-6-sdk" target="_blank" rel="noopener noreferrer">#</a>3.6 SDK</span></a></h3><h4 id="_3-6-1-说明" tabindex="-1"><a class="header-anchor" href="#_3-6-1-说明"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-6-1-%E8%AF%B4%E6%98%8E" target="_blank" rel="noopener noreferrer">#</a>3.6.1 说明</span></a></h4><p>SDK 是 Software Development Kit 的缩写，即软件开发工具包。SDK被开发出来是为了减少程序员工作量的，比如公司开发出某种软件的某一功能，把它封装成SDK，提供给其他公司和个人使用。</p><p>本小节需要开发短信接收服务SDK，通过SDK可以使应用系统更加方便的调用短信接收服务。</p><p>通过SDK方式调用短信接收服务，本质上还是调用的短信接收服务提供的HTTP接口（Controller），只不过是调用的过程在SDK中进行了封装。</p><p>项目结构：</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210924143027782.346a3429.png" alt="image-20210924143027782"></p><h4 id="_3-6-2-实现" tabindex="-1"><a class="header-anchor" href="#_3-6-2-实现"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-6-2-%E5%AE%9E%E7%8E%B0" target="_blank" rel="noopener noreferrer">#</a>3.6.2 实现</span></a></h4><p>导入的初始工程中主体代码已经完成，只需要实现业务处理类的具体逻辑即可（SmsSendServiceImpl的send方法）：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line">     * 通过HttpClient发送post请求，请求短信接收服务HTTP接口</span>
<span class="line">     *</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">baseParamsDTO</span></span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">url</span></span>
<span class="line">     * <span class="token keyword">@return</span></span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">R</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">BaseParamsDTO</span> baseParamsDTO<span class="token punctuation">,</span> <span class="token class-name">String</span> url<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//设置此平台的秘钥</span></span>
<span class="line">        baseParamsDTO<span class="token punctuation">.</span><span class="token function">setAccessKeyId</span><span class="token punctuation">(</span>accessKeyId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//电商 平台是否认证</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>auth<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//key secret 都要有</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>accessKeyId<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>accessKeySecret<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">&quot;accessKeyId或accessKeySecret不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        baseParamsDTO<span class="token punctuation">.</span><span class="token function">setTimestamp</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        baseParamsDTO<span class="token punctuation">.</span><span class="token function">setEncryption</span><span class="token punctuation">(</span><span class="token class-name">SmsEncryptionUtils</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>baseParamsDTO<span class="token punctuation">.</span><span class="token function">getTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> baseParamsDTO<span class="token punctuation">.</span><span class="token function">getAccessKeyId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> accessKeySecret<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>domain<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">&quot;domain不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//1 httpclien okhttp</span></span>
<span class="line">        <span class="token class-name">CloseableHttpClient</span> httpClient <span class="token operator">=</span> <span class="token class-name">HttpClients</span><span class="token punctuation">.</span><span class="token function">createDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//构造post请求</span></span>
<span class="line">        <span class="token class-name">HttpPost</span> post <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpPost</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//设置请求头</span></span>
<span class="line">        post<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/json; charset=UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//设置请求体</span></span>
<span class="line">        <span class="token class-name">StringEntity</span> stringEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringEntity</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>baseParamsDTO<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        post<span class="token punctuation">.</span><span class="token function">setEntity</span><span class="token punctuation">(</span>stringEntity<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//发送post请求</span></span>
<span class="line">            <span class="token class-name">CloseableHttpResponse</span> response <span class="token operator">=</span> httpClient<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>post<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">HttpEntity</span> responseEntity <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">//解析响应码</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">//发送成功</span></span>
<span class="line">                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;httpRequest access success, StatusCode is:{}&quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token class-name">String</span> responseEntityStr <span class="token operator">=</span> <span class="token class-name">EntityUtils</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>responseEntity<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;responseContent is :&quot;</span> <span class="token operator">+</span> responseEntityStr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">                <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>responseEntityStr<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">//发送失败</span></span>
<span class="line">                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;httpRequest access fail ,StatusCode is:{}&quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">&quot;status is &quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">            post<span class="token punctuation">.</span><span class="token function">releaseConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62</p><p>SDK开发完成后，为了方便其他应用使用，通常会将SDK打成jar包上传到远程maven仓库，在应用系统中直接通过maven坐标导入SDK即可使用。</p><p>如下是将SDK上传到Nexus后的效果：</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210924221808372.59eb0132.png" alt="image-20210924221808372"></p><p>如何搭建私服，详见公众号：IT李哥交朋友</p><h4 id="_3-6-3-测试" tabindex="-1"><a class="header-anchor" href="#_3-6-3-测试"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-6-3-%E6%B5%8B%E8%AF%95" target="_blank" rel="noopener noreferrer">#</a>3.6.3 测试</span></a></h4><p>第一步：引入SDK的maven坐标</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>ydlrepo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://192.168.200.131:8081/repository/ydlrepo/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.ydl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>ydl-sms-sdk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13</p><p>第二步：编写配置文件</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token comment"># 服务端使用sdk配置信息</span></span>
<span class="line"><span class="token key atrule">ydlclass</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">sms</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">auth</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">    <span class="token key atrule">domain</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">8771</span></span>
<span class="line">    <span class="token key atrule">accessKeyId</span><span class="token punctuation">:</span> dcbd824751cf448fa0b569f1f07b9b32</span>
<span class="line">    <span class="token key atrule">accessKeySecret</span><span class="token punctuation">:</span> 2f2e4da7fffd4391a9aaabd594f37db3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7</p><p>第三步：编写单元测试</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>sms<span class="token punctuation">.</span></span><span class="token class-name">SmsManageApplication</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">SmsParamsDTO</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">SmsSendService</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span></span><span class="token class-name">RunWith</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">SpringBootTest</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span></span><span class="token class-name">SpringRunner</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token class-name">SmsManageApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SdkTest</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">SmsSendService</span> smsSendService<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 通过SDK方式调用短信接收服务</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">         <span class="token class-name">SmsParamsDTO</span> dto <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SmsParamsDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        dto<span class="token punctuation">.</span><span class="token function">setMobile</span><span class="token punctuation">(</span><span class="token string">&quot;15718888888&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        dto<span class="token punctuation">.</span><span class="token function">setSignature</span><span class="token punctuation">(</span><span class="token string">&quot;DXQM_000000001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        dto<span class="token punctuation">.</span><span class="token function">setTemplate</span><span class="token punctuation">(</span><span class="token string">&quot;DXMB_000000001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;79857&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        dto<span class="token punctuation">.</span><span class="token function">setParams</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        dto<span class="token punctuation">.</span><span class="token function">setSendTime</span><span class="token punctuation">(</span><span class="token string">&quot;2021-12-18 10:00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        dto<span class="token punctuation">.</span><span class="token function">setTimestamp</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> smsSendService<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span>dto<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37</p><h2 id="第3章-短信发送服务" tabindex="-1"><a class="header-anchor" href="#第3章-短信发送服务"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#%E7%AC%AC3%E7%AB%A0-%E7%9F%AD%E4%BF%A1%E5%8F%91%E9%80%81%E6%9C%8D%E5%8A%A1" target="_blank" rel="noopener noreferrer">#</a>第3章 短信发送服务</span></a></h2><h2 id="_1-短信发送服务介绍" tabindex="-1"><a class="header-anchor" href="#_1-短信发送服务介绍"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_1-%E7%9F%AD%E4%BF%A1%E5%8F%91%E9%80%81%E6%9C%8D%E5%8A%A1%E4%BB%8B%E7%BB%8D" target="_blank" rel="noopener noreferrer">#</a>1. 短信发送服务介绍</span></a></h2><p>短信发送服务的作用就是从消息缓冲区获取消息并和具体的短信通道(例如：阿里云短信、梦网短信、乐信短信等)对接来发送短信。</p><p>动力短信短信平台整体架构：</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210924192730206.64f5f56c.png" alt="image-20210924192730206"></p><ul><li>发送短信：实时发送、定时发送</li><li>通道降级：通道发送失败，选择下一通道发送短信</li><li>通道选举：同一通道多次发送失败，降级通道</li><li>服务注册：有且只有一台机器执行通道选举</li></ul><h2 id="_2-redis实现分布式锁" tabindex="-1"><a class="header-anchor" href="#_2-redis实现分布式锁"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_2-redis%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81" target="_blank" rel="noopener noreferrer">#</a>2. Redis实现分布式锁</span></a></h2><p>对于简单的单体项目，即运行时程序在同一个Java虚拟机中，使用Java的锁机制（synchronized或者ReentrantLock）可以解决多线程并发问题。</p><p>可以运行<code>资料/redis-lock-demo</code>来重现线程并发问题。</p><p>测试过程：</p><p>第一步：启动redis-lock-demo服务</p><p>第二步：设置redis中库存stock值为100</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210925110700603.21e4920b.png" alt="image-20210925110700603"></p><p>第三步：使用apache jmeter进行压力测试</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210925110733847.2c796dcb.png" alt="image-20210925110733847"></p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210925110744160.4fdcd282.png" alt="image-20210925110744160"></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">注：Apache JMeter是Apache组织开发的基于Java的压力测试工具。用于对软件做压力测试，它最初被设计用于Web应用测试，但后来扩展到其他测试领域。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以发现对于单实例的应用来说，使用Java锁机制就可以解决线程并发问题。</p><p>但是在分布式环境中，程序是集群方式部署，如下图：</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210925114905838.357de5b7.png" alt="image-20210925114905838"></p><p>可以通过启动两个服务实例来测试集群部署时线程并发问题，具体测试步骤如下：</p><p>第一步：分别启动两个redis-lock-demo服务实例，端口号分别为8001和8002</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210925113940599.a3eb3342.png" alt="image-20210925113940599"></p><p>第二步：配置Nginx负载均衡，通过Nginx将压力分发到两个实例上</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">upstream</span> <span class="token value attr-value">upstream_name{</span></span>
<span class="line"><span class="token key attr-name">	server</span> <span class="token value attr-value">127.0.0.1:8001;</span></span>
<span class="line"><span class="token key attr-name">	server</span> <span class="token value attr-value">127.0.0.1:8002;</span></span>
<span class="line">}</span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">server</span> <span class="token value attr-value">{</span></span>
<span class="line"><span class="token key attr-name">    listen</span> <span class="token value attr-value">      8080;</span></span>
<span class="line"><span class="token key attr-name">    server_name</span> <span class="token value attr-value"> localhost;</span></span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">    location</span> <span class="token value attr-value">/ {</span></span>
<span class="line"><span class="token key attr-name">        proxy_pass</span> <span class="token value attr-value">http://upstream_name;</span></span>
<span class="line"><span class="token key attr-name">        proxy_set_header</span> <span class="token value attr-value">Host $host;</span></span>
<span class="line"><span class="token key attr-name">        proxy_set_header</span> <span class="token value attr-value">X-Real-IP $remote_addr;</span></span>
<span class="line"><span class="token key attr-name">        proxy_set_header</span> <span class="token value attr-value">X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16</p><p>第三步：使用Apache jmeter进行压力测试</p><p>可以发现对于集群环境下的多个服务实例又产生了线程并发问题。</p><p>上面的集群部署方式依然会产生线程并发问题，因为synchronized、ReentrantLock只是jvm级别的加锁，没有办法控制其他jvm。也就是上面两个tomcat实例还是可以出现并发执行的情况。要解决分布式环境下的并发问题，则必须使用分布式锁。</p><p>分布式锁可以理解为：控制分布式系统有序的去对共享资源进行操作，通过互斥来保证数据的一致性。</p><p>分布式锁，是控制分布式系统之间同步访问共享资源的一种方式。如果不同的系统或是同一个系统的不同主机之间共享了一个或一组资源，那么访问这些资源的时候，往往需要互斥来防止彼此干扰来保证一致性，在这种情况下，便需要使用到分布式锁。</p><p>实现分布式锁的方式很多，例如：Redis、数据库、Zookeeper等。</p><p>本小节主要讲Redis实现分布式锁的方式。</p><h3 id="_2-1-setnx" tabindex="-1"><a class="header-anchor" href="#_2-1-setnx"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_2-1-setnx" target="_blank" rel="noopener noreferrer">#</a>2.1 SETNX</span></a></h3><p>这种加锁的思路是，如果 key 不存在则为 key 设置 value，如果 key 已存在则 SETNX 命令不做任何操作</p><ul><li>客户端A请求服务器设置key的值，如果设置成功就表示加锁成功 mykey-&gt;myvalue</li><li>客户端B也去请求服务器设置key的值，如果返回失败，那么就代表加锁失败 mykey-&gt;myvalue</li><li>客户端A执行代码完成，删除锁</li><li>客户端B在等待一段时间后再去请求设置key的值，设置成功 mykey-&gt;myvalue</li><li>客户端B执行代码完成，删除锁</li></ul><p><strong>格式</strong>：</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre><code><span class="line"><span class="token comment">#尝试获取锁</span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">SETNX</span> key value</span>
<span class="line"><span class="token comment">#设置锁过期时间</span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">EXPIRE</span> key seconds</span>
<span class="line"><span class="token comment">#删除锁</span></span>
<span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">DEL</span> key</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6</p><p>为什么要设置key过期时间呢？</p><p>如果某个客户端获得锁后因为某些原因意外退出了，导致创建了锁但是没有来得及删除锁，那么这个锁将一直存在，后面所有的客户端都无法再获得锁，所以必须要设置过期时间。</p><h3 id="_2-2-set" tabindex="-1"><a class="header-anchor" href="#_2-2-set"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_2-2-set" target="_blank" rel="noopener noreferrer">#</a>2.2 SET</span></a></h3><p>通过前面的expire命令来设置锁过期时间还存在一个问题，就是SETNX和EXPIRE两个命令不是原子性操作。在极端情况下可能会出现获取锁后还没来得及设置过期时间程序就挂掉了，这样就又出现了锁一直存在，后面所有的客户端都无法再获得锁的问题。</p><p>如何解决这个问题？答案是使用SET命令。</p><p>SET 命令从Redis 2.6.12 版本开始包含设置过期时间的功能，这样获取锁和设置过期时间就是一个原子操作了。</p><p><strong>格式</strong>：</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre><code><span class="line"><span class="token constant">SET</span> key value <span class="token punctuation">[</span><span class="token constant">EX</span> seconds<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token constant">NX</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p><strong>示例</strong>：</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre><code><span class="line"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> <span class="token constant">SET</span> mykey myvalue <span class="token constant">EX</span> <span class="token number">5</span> <span class="token constant">NX</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><ul><li>EX seconds ：将键的过期时间设置为 seconds 秒</li><li>NX ：只在key不存在时才对键进行设置操作</li></ul><h3 id="_2-3-代码实现" tabindex="-1"><a class="header-anchor" href="#_2-3-代码实现"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_2-3-%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0" target="_blank" rel="noopener noreferrer">#</a>2.3 代码实现</span></a></h3><p>基于redis实现分布式锁：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"> <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token class-name">RedisLock</span> redisLock<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//使用redis分布式锁，无阻塞</span></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/stock3&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">stock3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span> mylock <span class="token operator">=</span> redisLock<span class="token punctuation">.</span><span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token string">&quot;MYLOCK&quot;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>mylock<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">int</span> stock <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;stock&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>stock <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                stock<span class="token operator">--</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">//放回redis</span></span>
<span class="line">                stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;stock&quot;</span><span class="token punctuation">,</span> stock <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;减库存成功，剩余库存是：&quot;</span> <span class="token operator">+</span> stock<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;库存不足了！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            redisLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token string">&quot;MYLOCK&quot;</span><span class="token punctuation">,</span>mylock<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;OK&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//使用redis分布式锁，有阻塞</span></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/stock4&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">stock4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span> mylock <span class="token operator">=</span> redisLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token string">&quot;MYLOCK&quot;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>mylock<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">int</span> stock <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;stock&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>stock <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                stock<span class="token operator">--</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">//放回redis</span></span>
<span class="line">                stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;stock&quot;</span><span class="token punctuation">,</span> stock <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;减库存成功，剩余库存是：&quot;</span> <span class="token operator">+</span> stock<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;库存不足了！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            redisLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token string">&quot;MYLOCK&quot;</span><span class="token punctuation">,</span>mylock<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;OK&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42</p><h2 id="_3-spring-task定时任务" tabindex="-1"><a class="header-anchor" href="#_3-spring-task定时任务"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-spring-task%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1" target="_blank" rel="noopener noreferrer">#</a>3. Spring Task定时任务</span></a></h2><h3 id="_3-1-spring-task介绍" tabindex="-1"><a class="header-anchor" href="#_3-1-spring-task介绍"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-1-spring-task%E4%BB%8B%E7%BB%8D" target="_blank" rel="noopener noreferrer">#</a>3.1 Spring Task介绍</span></a></h3><p>在企业软件开发中经常会遇到定时任务处理的业务场景，例如银行系统每晚会定时执行对账业务，很多系统每晚都会定时执行数据备份等等。</p><p>定时任务的实现方案有很多，例如：Quartz、Spring Task、XXL job等。对于简单的应用场景可以使用Spring Task。Spring Task相关API在spring-context包中已经提供了，不需要额外导入其他jar包。</p><h3 id="_3-2-代码案例" tabindex="-1"><a class="header-anchor" href="#_3-2-代码案例"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_3-2-%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B" target="_blank" rel="noopener noreferrer">#</a>3.2 代码案例</span></a></h3><p>在Spring Boot项目中使用Spring Task非常简单，只需要在Bean的方法上加入@Scheduled注解，并通过cron表达式指定触发的时间即可。</p><p>第一步：在启动类上加入@EnableScheduling注解</p><p>第二步：编写定时任务类</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>job</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>scheduling<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Scheduled</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoJob</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;0/5 * * * * ?&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;现在时间是&quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17</p><h2 id="_4-短信发送服务" tabindex="-1"><a class="header-anchor" href="#_4-短信发送服务"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_4-%E7%9F%AD%E4%BF%A1%E5%8F%91%E9%80%81%E6%9C%8D%E5%8A%A1" target="_blank" rel="noopener noreferrer">#</a>4. 短信发送服务</span></a></h2><h3 id="_4-1-需求分析" tabindex="-1"><a class="header-anchor" href="#_4-1-需求分析"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_4-1-%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90" target="_blank" rel="noopener noreferrer">#</a>4.1 需求分析</span></a></h3><p><strong>功能需求：</strong></p><ul><li>和具体的短信通道对接（例如：阿里云短信、梦网短信等），发送短信</li><li>短信定时发送</li><li>短信实时发送</li><li>服务注册，保证短信发送服务高可用</li><li>通道自动选举、降级</li></ul><p><strong>处理过程：</strong></p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210925174705923.8213b176.png" alt="image-20210925174705923"></p><h3 id="_4-2-项目结构" tabindex="-1"><a class="header-anchor" href="#_4-2-项目结构"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_4-2-%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84" target="_blank" rel="noopener noreferrer">#</a>4.2 项目结构</span></a></h3><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210925165514680.59fef8a7.png" alt="image-20210925165514680"></p><h3 id="_4-3-核心代码" tabindex="-1"><a class="header-anchor" href="#_4-3-核心代码"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_4-3-%E6%A0%B8%E5%BF%83%E4%BB%A3%E7%A0%81" target="_blank" rel="noopener noreferrer">#</a>4.3 核心代码</span></a></h3><p>短信发送服务核心类：</p><ul><li>ServerRegister：服务注册器，用于将短信发送服务注册到Redis中，定时服务上报，定时服务检查</li><li>ConfigServiceImpl：通道配置器，用于查询可用通道（阿里短信、华为短信等），通道选举、降级</li><li>AbstractSmsService：短信发送器抽象父类，子类需要和具体的短信通道对接来完成发送短信的工作</li><li>SmsConnectLoader：通道实例加载器，根据通道配置，初始化每个通道的Bean对象</li><li>SmsFactory：短信发送工厂，获取具体的通道实例Bean对象（例如AliyunSmsService）来发送短信， 如果发送出现异常，触发通道选举和通道降级策略</li><li>SendTimingSmsImpl：定时短信业务处理器，具体负责定时短信的发送</li><li>SendSmsJob：短信发送定时任务，用于定时短信的发送，调用SendTimingSmsImpl发送定时短信</li><li>GeneralSmsListener、HighSmsListener：短信接收器，Redis队列的消费者，监听队列中的消息，如果有消息则调用SmsFactory发送实时短信</li><li>HighServerReceiver：通道消息监听器，通过Redis的发布订阅模式监听通道相关消息，调用SmsConnectLoader初始化通道和更新通道</li><li>SubscriberConfig：订阅发布模式的容器配置，创建消息监听容器，并将HighServerReceiver加入容器中</li></ul><h3 id="_4-4-功能实现" tabindex="-1"><a class="header-anchor" href="#_4-4-功能实现"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_4-4-%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0" target="_blank" rel="noopener noreferrer">#</a>4.4 功能实现</span></a></h3><h4 id="_4-4-1-服务注册器" tabindex="-1"><a class="header-anchor" href="#_4-4-1-服务注册器"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_4-4-1-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%99%A8" target="_blank" rel="noopener noreferrer">#</a>4.4.1 服务注册器</span></a></h4><p>服务注册器对应的为ServerRegister类。</p><p>短信发送服务支持分布式集群部署，可以是多个实例，实例越多，发送短信的能力越强。但是对于通道选举、持久化通道等操作，只能有一个服务实例执行，其他服务实例通过redis的广播机制获得通道变化。</p><p>如果要实现这一功能，需要将所有短信发送服务实例注册到某个地方，当前实现是将所有服务实例注册到Redis中。并且为了能够监控每个服务实例运行状态，需要每个服务实例定时上报并且定时进行服务检查。</p><p><strong>业务逻辑：</strong></p><p>1、服务注册，项目启动时将当前服务实例id注册到redis</p><p>2、服务上报，每三分钟报告一次，并传入当前时间戳</p><p>3、服务检查，每十分钟检查一次服务列表，清空超过五分钟没有报告的服务</p><p><strong>代码实现：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>factory</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">CommandLineRunner</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Order</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">RedisTemplate</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">StringRedisTemplate</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>scheduling<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Scheduled</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">UUID</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 服务注册器，将短信发送服务注册到Redis中，定时服务上报，定时服务检查</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token annotation punctuation">@Slf4j</span></span>
<span class="line"><span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServerRegister</span> <span class="token keyword">implements</span> <span class="token class-name">CommandLineRunner</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">//当前服务实例的唯一标识，可以使用UUID随机生成</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">SERVER_ID</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 项目启动时自动执行此方法，将当前服务实例注册到redis</span>
<span class="line">     *</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">args</span></span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//TODO 服务注册器，项目启动时将当前服务id注册到Redis中，使用Redis的Hash结构，key为SERVER_ID_HASH，Hash结构的key为服务id，value为时间戳</span></span>
<span class="line">        <span class="token comment">// SERVER_ID_HASH   key  value</span></span>
<span class="line">        <span class="token constant">SERVER_ID</span> <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//当前实例key</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;server实例启动，生成的id:{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">SERVER_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;SERVER_ID_HASH&quot;</span><span class="token punctuation">,</span> <span class="token constant">SERVER_ID</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 定时服务报告</span>
<span class="line">     * 报告服务信息证明服务存在 每三分钟报告一次，并传入当前时间戳</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;1 1/3 * * * ?&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">serverReport</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//TODO 服务注册器，每三分钟报告一次，并传入当前时间戳</span></span>
<span class="line"></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;服务定时上报。id:{}&quot;</span><span class="token punctuation">,</span><span class="token constant">SERVER_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;SERVER_ID_HASH&quot;</span><span class="token punctuation">,</span> <span class="token constant">SERVER_ID</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 定时服务检查</span>
<span class="line">     * 每十分钟检查一次服务列表，清空超过五分钟没有报告的服务</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;30 1/10 * * * ?&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">checkServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//TODO 服务注册器，定时检查redis,每隔10分钟查看，超过5分钟还没上报自己信息的服务，清除掉</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;定时服务检查。id:{}&quot;</span><span class="token punctuation">,</span><span class="token constant">SERVER_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Map</span> map <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token string">&quot;SERVER_ID_HASH&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;当前服务有：&quot;</span><span class="token operator">+</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">long</span> now <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">List</span> removeKeys<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//该要删除的key</span></span>
<span class="line">        <span class="token comment">//jdk8 lambda表达式</span></span>
<span class="line">        map<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">long</span> registrTime <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span><span class="token punctuation">(</span>now<span class="token operator">-</span>registrTime<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                removeKeys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;该要删除的key有：{}&quot;</span><span class="token punctuation">,</span>removeKeys<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        removeKeys<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>key<span class="token operator">-&gt;</span><span class="token punctuation">{</span></span>
<span class="line">            redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&quot;SERVER_ID_HASH&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84</p><p>可以启动两个服务实例来测试服务注册、服务上报、服务检查是否能够正常执行。</p><h4 id="_4-4-2-通道实例加载器" tabindex="-1"><a class="header-anchor" href="#_4-4-2-通道实例加载器"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_4-4-2-%E9%80%9A%E9%81%93%E5%AE%9E%E4%BE%8B%E5%8A%A0%E8%BD%BD%E5%99%A8" target="_blank" rel="noopener noreferrer">#</a>4.4.2 通道实例加载器</span></a></h4><p>通道实例加载器对应的为SmsConnectLoader类。</p><p>短信发送服务存在多个通道（例如阿里云短信、华为云短信等），这些通道是通过后台管理系统设置的，包括通道的名称、签名、模板、连接方式等信息。当短信发送服务启动时，或者后台管理系统设置通道时，将会初始化短信通道。</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210925180125503.14602673.png" alt="image-20210925180125503"></p><p>通道实例加载器的作用就是根据通道配置，初始化每个通道的Bean对象（例如AliyunSmsService、MengWangSmsService等）。</p><p>SmsConnectLoader类中只需要实现initConnect方法即可，其他方法已经提供好。</p><p><strong>业务逻辑：</strong></p><p>1、查询数据库获得通道列表</p><p>2、遍历通道列表，通过反射创建每个通道的Bean对象（例如AliyunSmsService、MengWangSmsService等）</p><p>3、将每个通道的Bean对象保存到CONNECT_LIST集合中</p><p><strong>具体代码如下：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line">     * 根据通道配置，初始化每个通道的bean对象</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@SneakyThrows</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initConnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//TODO 根据通道配置，初始化每个通道的bean对象</span></span>
<span class="line">        <span class="token comment">//1、查询数据库获得通道列表</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigEntity</span><span class="token punctuation">&gt;</span></span> configEntitiesList <span class="token operator">=</span> configService<span class="token punctuation">.</span><span class="token function">listForConnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">List</span> constructorList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//2、遍历通道列表，通过反射创建每个通道的Bean对象（例如AliyunSmsService、MengWangSmsService等）</span></span>
<span class="line">        configEntitiesList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>configEntity<span class="token operator">-&gt;</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">SmsConfig</span> config<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SmsConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                config<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>configEntity<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                config<span class="token punctuation">.</span><span class="token function">setDomain</span><span class="token punctuation">(</span>configEntity<span class="token punctuation">.</span><span class="token function">getDomain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                config<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>configEntity<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                config<span class="token punctuation">.</span><span class="token function">setPlatform</span><span class="token punctuation">(</span>configEntity<span class="token punctuation">.</span><span class="token function">getPlatform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                config<span class="token punctuation">.</span><span class="token function">setAccessKeyId</span><span class="token punctuation">(</span>configEntity<span class="token punctuation">.</span><span class="token function">getAccessKeyId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                config<span class="token punctuation">.</span><span class="token function">setAccessKeySecret</span><span class="token punctuation">(</span>configEntity<span class="token punctuation">.</span><span class="token function">getAccessKeySecret</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>configEntity<span class="token punctuation">.</span><span class="token function">getOther</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">LinkedHashMap</span> linkedHashMap <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>configEntity<span class="token punctuation">.</span><span class="token function">getOther</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">LinkedHashMap</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                    config<span class="token punctuation">.</span><span class="token function">setOtherConfig</span><span class="token punctuation">(</span>linkedHashMap<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">                <span class="token comment">//反射 创建Service</span></span>
<span class="line">                <span class="token comment">//全限定名 com.ydl.sms.sms.AliyunSmsService</span></span>
<span class="line">                <span class="token class-name">String</span> className<span class="token operator">=</span><span class="token string">&quot;com.ydl.sms.sms.&quot;</span><span class="token operator">+</span>config<span class="token punctuation">.</span><span class="token function">getPlatform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;SmsService&quot;</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">                <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> aClass <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//加载类</span></span>
<span class="line">                <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> constructor <span class="token operator">=</span> aClass<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token class-name">SmsConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//拿到具体的构造方法</span></span>
<span class="line">                <span class="token class-name">Object</span> obj <span class="token operator">=</span> constructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//创建对象</span></span>
<span class="line"></span>
<span class="line">                <span class="token comment">//从容器中获取签名和模板的service</span></span>
<span class="line">                <span class="token class-name">SignatureService</span> signatureService <span class="token operator">=</span> <span class="token class-name">SpringUtils</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">SignatureService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token class-name">TemplateService</span> templateService <span class="token operator">=</span> <span class="token class-name">SpringUtils</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">TemplateService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">//找到这两个service在父类中的属性</span></span>
<span class="line">                <span class="token class-name">Field</span> signatureServiceField <span class="token operator">=</span> aClass<span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;signatureService&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token class-name">Field</span> templateServiceField <span class="token operator">=</span> aClass<span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;templateService&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">//打开访问权限</span></span>
<span class="line">                signatureServiceField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                templateServiceField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">//设置属性值了</span></span>
<span class="line">                signatureServiceField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span>signatureService<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                templateServiceField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span>templateService<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">                constructorList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;初始化通道成功：{}，{}&quot;</span><span class="token punctuation">,</span>config<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>config<span class="token punctuation">.</span><span class="token function">getPlatform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;初始化通道异常：{}&quot;</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//3、将每个通道的Bean对象保存到CONNECT_LIST集合中</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token constant">CONNECT_LIST</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token constant">CONNECT_LIST</span><span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token constant">CONNECT_LIST</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>constructorList<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//解锁逻辑</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token constant">BUILD_NEW_CONNECT_TOKEN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            redisLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token string">&quot;buildNewConnect&quot;</span><span class="token punctuation">,</span> <span class="token constant">BUILD_NEW_CONNECT_TOKEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;通道初始化完成了。{}&quot;</span><span class="token punctuation">,</span><span class="token constant">CONNECT_LIST</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67</p><h4 id="_4-4-3-定时短信业务处理器" tabindex="-1"><a class="header-anchor" href="#_4-4-3-定时短信业务处理器"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_4-4-3-%E5%AE%9A%E6%97%B6%E7%9F%AD%E4%BF%A1%E4%B8%9A%E5%8A%A1%E5%A4%84%E7%90%86%E5%99%A8" target="_blank" rel="noopener noreferrer">#</a>4.4.3 定时短信业务处理器</span></a></h4><p>定时短信业务处理器对应的是SendTimingSmsImpl类，具体负责定时短信的发送。</p><p><strong>业务逻辑：</strong></p><p>1、查询数据库获取本次需要发送的定时短信</p><p>2、调用短信工厂发送短信</p><p>3、更新短信发送状态为“已处理”</p><p><strong>实现代码：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>job</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span><span class="token class-name">LambdaQueryWrapper</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">TimingPushEntity</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">SmsFactory</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">TimingPushMapper</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>scheduling<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Async</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 定时短信业务处理器</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token annotation punctuation">@Slf4j</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SendTimingSmsImpl</span> <span class="token keyword">implements</span> <span class="token class-name">SendTimingSms</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">TimingPushMapper</span> timingPushMapper<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">SmsFactory</span> smsFactory<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 发送定时短信</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">timing</span></span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token annotation punctuation">@Async</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">String</span> timing<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//timing格式：yyyy-MM-dd HH:mm  2021-12-25 18:00</span></span>
<span class="line">        <span class="token comment">//TODO 查询数据库获取本次需要发送的定时短信，调用短信工厂发送短信</span></span>
<span class="line">        <span class="token comment">//1、查询数据库获取本次需要发送的定时短信</span></span>
<span class="line">        <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TimingPushEntity</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        wrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">TimingPushEntity</span><span class="token operator">::</span><span class="token function">getStatus</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        wrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">TimingPushEntity</span><span class="token operator">::</span><span class="token function">getTiming</span><span class="token punctuation">,</span>timing<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        wrapper<span class="token punctuation">.</span><span class="token function">orderByAsc</span><span class="token punctuation">(</span><span class="token class-name">TimingPushEntity</span><span class="token operator">::</span><span class="token function">getCreateTime</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TimingPushEntity</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> timingPushMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;这一批次要发的短信条数是：{}，{}&quot;</span><span class="token punctuation">,</span>timing<span class="token punctuation">,</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>x<span class="token operator">-&gt;</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//2、调用短信工厂发送短信</span></span>
<span class="line">            <span class="token class-name">String</span> request <span class="token operator">=</span> x<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            smsFactory<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">//3、更新短信发送状态为“已处理”</span></span>
<span class="line">            x<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            x<span class="token punctuation">.</span><span class="token function">setUpdateTime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            x<span class="token punctuation">.</span><span class="token function">setUpdateUser</span><span class="token punctuation">(</span><span class="token string">&quot;system&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            timingPushMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;任务执行完毕&quot;</span><span class="token operator">+</span>timing<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59</p><h4 id="_4-4-4-短信发送定时任务" tabindex="-1"><a class="header-anchor" href="#_4-4-4-短信发送定时任务"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_4-4-4-%E7%9F%AD%E4%BF%A1%E5%8F%91%E9%80%81%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1" target="_blank" rel="noopener noreferrer">#</a>4.4.4 短信发送定时任务</span></a></h4><p>短信发送定时任务对应的是SendSmsJob类，用于定时短信的发送，调用SendTimingSmsImpl发送定时短信。</p><p><strong>业务逻辑：</strong></p><p>1、每分钟触发一次定时任务</p><p>2、为了防止短信重复发送，需要使用分布式锁</p><p>3、调用SendTimingSmsImpl发送定时短信</p><p><strong>代码实现：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>job</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">RedisLock</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">DateUtils</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>scheduling<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Scheduled</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 定时任务，用于发送定时短信</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token annotation punctuation">@Slf4j</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SendSmsJob</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">SendTimingSms</span> sendTimingSms<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">RedisLock</span> redisLock<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 每分钟检查一次是否有定时短信需要发送</span>
<span class="line">     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">InterruptedException</span></span></span>
<span class="line">     */</span></span>
<span class="line">    <span class="token comment">//1、每分钟触发一次定时任务</span></span>
<span class="line">    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;10 0/1 * * * ?&quot;</span><span class="token punctuation">)</span>     <span class="token comment">//每分钟的第10秒执行一次</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendTimingSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//TODO 定时任务，每分钟检查一次是否有定时短信需要发送</span></span>
<span class="line">        <span class="token comment">//1、每分钟触发一次定时任务</span></span>
<span class="line">        <span class="token comment">//2、为了防止短信重复发送，需要使用分布式锁</span></span>
<span class="line">        <span class="token class-name">String</span> lock <span class="token operator">=</span> redisLock<span class="token punctuation">.</span><span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token string">&quot;SEND_TIMING_SMS&quot;</span><span class="token punctuation">,</span> <span class="token number">30</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>lock<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//3、调用SendTimingSmsImpl发送定时短信</span></span>
<span class="line">            sendTimingSms<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;yyyy-MM-dd HH:mm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42</p><h4 id="_4-4-5-短信监听器" tabindex="-1"><a class="header-anchor" href="#_4-4-5-短信监听器"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_4-4-5-%E7%9F%AD%E4%BF%A1%E7%9B%91%E5%90%AC%E5%99%A8" target="_blank" rel="noopener noreferrer">#</a>4.4.5 短信监听器</span></a></h4><p>应用系统调用短信接收服务，短信接收服务将短信消息放入消息队列，实现短信的接收和发送的解耦，这种方案可以最大化提高短信接收服务性能，不会由于外部短信通道影响应用系统的响应，从而起到削峰填谷的效果。</p><p>本系统使用的Redis集群作为消息队列，在传输短信时，采用的是生产者消费者模式。</p><p>短信接收器对应的类为GeneralSmsListener和HighSmsListener，角色是Redis队列的消费者，监听队列中的消息，如果有消息则调用SmsFactory发送实时短信。</p><p><strong>业务逻辑：</strong></p><p>1、HighSmsListener监听TOPIC_HIGH_SMS队列，如果有消息则调用短信发送工厂SmsFactory发送实时短信</p><p>2、GeneralSmsListener监听TOPIC_GENERAL_SMS队列，如果有消息则调用短信发送工厂SmsFactory发送实时短信</p><p><strong>HighSmsListener具体实现：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>redismq</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">SmsFactory</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">ListOperations</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">RedisTemplate</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostConstruct</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Redis队列-----消费者</span>
<span class="line"> * 监听消息队列：TOPIC_HIGH_SMS，高优先级的短信，如验证码之类的短信</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token annotation punctuation">@Slf4j</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HighSmsListener</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">SmsFactory</span> smsFactory<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> queueKey <span class="token operator">=</span> <span class="token string">&quot;TOPIC_HIGH_SMS&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.redis.queue.pop.timeout}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Long</span> popTimeout <span class="token operator">=</span> <span class="token number">8000L</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">ListOperations</span> listOps<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PostConstruct</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        listOps <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//TODO 监听TOPIC_HIGH_SMS队列，如果有消息则调用短信发送工厂发送实时短信</span></span>
<span class="line">        <span class="token comment">//监听    TOPIC_HIGH_SMS 发送</span></span>
<span class="line">        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;队列{}正在监听中&quot;</span><span class="token punctuation">,</span>queueKey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">//SmsSendDTO --&gt;string</span></span>
<span class="line">            <span class="token class-name">String</span> message <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> listOps<span class="token punctuation">.</span><span class="token function">rightPop</span><span class="token punctuation">(</span>queueKey<span class="token punctuation">,</span> popTimeout<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;{}收到消息了：{}&quot;</span><span class="token punctuation">,</span>queueKey<span class="token punctuation">,</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">//发送</span></span>
<span class="line">                smsFactory<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57</p><p><strong>GeneralSmsListener具体实现：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>redismq</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">SmsFactory</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">ListOperations</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">RedisTemplate</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostConstruct</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Redis队列消费者，监听消息队列TOPIC_GENERAL_SMS，普通优先级的短信，如营销短信</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token annotation punctuation">@Slf4j</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GeneralSmsListener</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">SmsFactory</span> smsFactory<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> queueKey <span class="token operator">=</span> <span class="token string">&quot;TOPIC_GENERAL_SMS&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.redis.queue.pop.timeout}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Long</span> popTimeout <span class="token operator">=</span> <span class="token number">8000L</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">ListOperations</span> listOps<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PostConstruct</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        listOps <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//TODO 监听TOPIC_GENERAL_SMS队列，如果有消息则调用短信发送工厂发送实时短信</span></span>
<span class="line">        <span class="token comment">//监听    TOPIC_GENERAL_SMS 发送</span></span>
<span class="line">        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;队列{}正在监听中&quot;</span><span class="token punctuation">,</span>queueKey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">//SmsSendDTO --&gt;string</span></span>
<span class="line">            <span class="token class-name">String</span> message <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> listOps<span class="token punctuation">.</span><span class="token function">rightPop</span><span class="token punctuation">(</span>queueKey<span class="token punctuation">,</span> popTimeout<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;{}收到消息了：{}&quot;</span><span class="token punctuation">,</span>queueKey<span class="token punctuation">,</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">//发送</span></span>
<span class="line">                smsFactory<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-4-6-通道消息监听器" tabindex="-1"><a class="header-anchor" href="#_4-4-6-通道消息监听器"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_4-4-6-%E9%80%9A%E9%81%93%E6%B6%88%E6%81%AF%E7%9B%91%E5%90%AC%E5%99%A8" target="_blank" rel="noopener noreferrer">#</a>4.4.6 通道消息监听器</span></a></h4><p>通道消息监听器对应的类是HighServerReceiver，作用是通过Redis的发布订阅模式监听TOPIC_HIGH_SERVER频道中的消息，调用SmsConnectLoader初始化通道和更新通道。</p><p><strong>业务逻辑：</strong></p><p>1、通过Redis发布订阅模式监听TOPIC_HIGH_SERVER频道中的消息</p><p>2、如果消息为USE_NEW_CONNECT，表示通道更新，调用通道实例加载器SmsConnectLoader更新通道</p><p>3、如果消息为INIT_CONNECT，表示通道初始化，调用通道实例加载器SmsConnectLoader初始化通道</p><p><strong>实现代码：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>redismq</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">SmsConnectLoader</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>sms<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">ServerTopic</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>connection<span class="token punctuation">.</span></span><span class="token class-name">Message</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>connection<span class="token punctuation">.</span></span><span class="token class-name">MessageListener</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">RedisTemplate</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span></span><span class="token class-name">RedisSerializer</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Redis发布订阅----订阅者，通过Redis的发布订阅模式监听TOPIC_HIGH_SERVER频道</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token annotation punctuation">@Slf4j</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HighServerReceiver</span> <span class="token keyword">implements</span> <span class="token class-name">MessageListener</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">SmsConnectLoader</span> smsConnectLoader<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 消息监听</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">message</span></span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">pattern</span></span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token class-name">Message</span> message<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> pattern<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//TODO 消息监听，根据消息内容调用smsConnectLoader进行通道初始化或者通道更新</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">RedisSerializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> valueSerializer <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">getDefaultSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> deserialize <span class="token operator">=</span> valueSerializer<span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token class-name">ServerTopic</span> serverTopic <span class="token operator">=</span> <span class="token class-name">ServerTopic</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>deserialize<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">switch</span> <span class="token punctuation">(</span>serverTopic<span class="token punctuation">.</span><span class="token function">getOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token class-name">ServerTopic</span><span class="token punctuation">.</span><span class="token constant">USE_NEW_CONNECT</span><span class="token operator">:</span></span>
<span class="line">                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;服务：{} 发起【通道更新】&quot;</span><span class="token punctuation">,</span> serverTopic<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                smsConnectLoader<span class="token punctuation">.</span><span class="token function">changeNewConnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token class-name">ServerTopic</span><span class="token punctuation">.</span><span class="token constant">INIT_CONNECT</span><span class="token operator">:</span></span>
<span class="line">                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;服务：{} 发起【通道初始化】&quot;</span><span class="token punctuation">,</span> serverTopic<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                smsConnectLoader<span class="token punctuation">.</span><span class="token function">initConnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">                <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54</p><h2 id="_5对接阿里短信进行真实发送" tabindex="-1"><a class="header-anchor" href="#_5对接阿里短信进行真实发送"><span><a href="https://www.ydlclass.com/doc21xnv/project/message/#_5%E5%AF%B9%E6%8E%A5%E9%98%BF%E9%87%8C%E7%9F%AD%E4%BF%A1%E8%BF%9B%E8%A1%8C%E7%9C%9F%E5%AE%9E%E5%8F%91%E9%80%81" target="_blank" rel="noopener noreferrer">#</a>5对接阿里短信进行真实发送！</span></a></h2><p>1申请阿里短信的签名 和 模板</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210926040554940.4c71e349.png" alt="image-20210926040554940"></p><p>2获取accessKey和secret</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210926040656499.ff340c30.png" alt="image-20210926040656499"></p><p>3参考文档经行代码编写</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">private void init() {</span>
<span class="line">        //初始化acsClient，暂不支持region化 &quot;cn-hangzhou&quot;</span>
<span class="line">        //profile = DefaultProfile.getProfile(config.get(&quot;RegionId&quot;), config.getAccessKeyId(), config.getAccessKeySecret());</span>
<span class="line">        aliconfig = new Config()</span>
<span class="line">                // 您的AccessKey ID</span>
<span class="line">                .setAccessKeyId(config.getAccessKeyId())</span>
<span class="line">                // 您的AccessKey Secret</span>
<span class="line">                .setAccessKeySecret( config.getAccessKeySecret());</span>
<span class="line">        // 访问的域名</span>
<span class="line">        aliconfig.endpoint = &quot;dysmsapi.aliyuncs.com&quot;;</span>
<span class="line">    }</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">@Override</span>
<span class="line">    protected String sendSms(String mobile, Map&lt;String, String&gt; params, String signature, String template) {</span>
<span class="line">        // 获取 签名内容 和模板id</span>
<span class="line">        SignatureEntity signatureEntity = signatureService.getByCode(signature);</span>
<span class="line">        String code = templateService.getConfigCodeByCode(config.getId(), template);</span>
<span class="line">        try {</span>
<span class="line">            Client client = new Client(aliconfig);</span>
<span class="line"></span>
<span class="line">            SendSmsRequest request=new SendSmsRequest();</span>
<span class="line">            request.setPhoneNumbers(mobile);</span>
<span class="line">            request.setTemplateCode(code);</span>
<span class="line">            request.setTemplateParam(JSON.toJSONString(params));</span>
<span class="line">            request.setSignName(signatureEntity.getContent());</span>
<span class="line"></span>
<span class="line">            SendSmsResponse response = client.sendSms(request);</span>
<span class="line">            JSONObject jsonObject = JSON.parseObject(String.valueOf(response.getBody()));</span>
<span class="line">            if (response.getBody().getCode().equals(&quot;OK&quot;)) {</span>
<span class="line">                return response.getBody().toString();</span>
<span class="line">            } else {</span>
<span class="line">                return failResponse(jsonObject.getString(&quot;Message&quot;),response.getBody().getMessage());</span>
<span class="line">            }</span>
<span class="line">        } catch (Exception e) {</span>
<span class="line">            log.error(&quot;Aliyun 短信发送失败：{} ,{}&quot;, mobile, template, e);</span>
<span class="line">            return failResponse(e.getMessage(), e.getMessage());</span>
<span class="line">        }</span>
<span class="line">        //&quot;{\\&quot;Message\\&quot;:\\&quot;OK\\&quot;,\\&quot;RequestId\\&quot;:\\&quot;&quot; + UUID.randomUUID().toString().toUpperCase() + &quot;-@\\&quot;,\\&quot;BizId\\&quot;:\\&quot;&quot; + System.currentTimeMillis() + &quot;\\&quot;,\\&quot;Code\\&quot;:\\&quot;OK\\&quot;}&quot;;</span>
<span class="line">    }</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4平台配置相应正确参数</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210926040844298.ea99a523.png" alt="image-20210926040844298"></p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210926040853475.7995b0c6.png" alt="image-20210926040853475"></p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210926040905138.5a424696.png" alt="image-20210926040905138"></p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210926040915170.3ead5d57.png" alt="image-20210926040915170"><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210926040924104.3d778718.png" alt="image-20210926040924104"></p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210926040930674.851d3f30.png" alt="image-20210926040930674"></p><p>5启动三个平台，和shop服务，进行发送</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210926041010750.2bf815e3.png" alt="image-20210926041010750"></p><p>6结果</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210926041050855.067ff263.png" alt="image-20210926041050855"></p>`,416),l=[t];function c(o,i){return a(),s("div",null,l)}const r=n(e,[["render",c],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/message/","title":"短信调度平台项目","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"第1章 项目概述及管理端","slug":"第1章-项目概述及管理端","link":"#第1章-项目概述及管理端","children":[]},{"level":2,"title":"1. 项目概述","slug":"_1-项目概述","link":"#_1-项目概述","children":[{"level":3,"title":"1.1 背景介绍","slug":"_1-1-背景介绍","link":"#_1-1-背景介绍","children":[]},{"level":3,"title":"#1.2 业务架构","slug":"_1-2-业务架构","link":"#_1-2-业务架构","children":[]},{"level":3,"title":"#1.3 技术架构","slug":"_1-3-技术架构","link":"#_1-3-技术架构","children":[]},{"level":3,"title":"#1.4 项目模块介绍","slug":"_1-4-项目模块介绍","link":"#_1-4-项目模块介绍","children":[]}]},{"level":2,"title":"#2. 项目环境准备","slug":"_2-项目环境准备","link":"#_2-项目环境准备","children":[{"level":3,"title":"#2.1 环境要求","slug":"_2-1-环境要求","link":"#_2-1-环境要求","children":[]},{"level":3,"title":"#2.2 Redis集群","slug":"_2-2-redis集群","link":"#_2-2-redis集群","children":[]},{"level":3,"title":"#2.3 后端工程导入","slug":"_2-3-后端工程导入","link":"#_2-3-后端工程导入","children":[]},{"level":3,"title":"#2.4 数据库","slug":"_2-4-数据库","link":"#_2-4-数据库","children":[]},{"level":3,"title":"#2.5 前端工程","slug":"_2-5-前端工程","link":"#_2-5-前端工程","children":[]}]},{"level":2,"title":"#3. 后台管理服务","slug":"_3-后台管理服务","link":"#_3-后台管理服务","children":[{"level":3,"title":"#3.1. 项目结构","slug":"_3-1-项目结构","link":"#_3-1-项目结构","children":[]},{"level":3,"title":"#3.2. 功能清单","slug":"_3-2-功能清单","link":"#_3-2-功能清单","children":[]},{"level":3,"title":"#3.3. 数据模型与类","slug":"_3-3-数据模型与类","link":"#_3-3-数据模型与类","children":[]},{"level":3,"title":"#3.4. 基础属性自动注入","slug":"_3-4-基础属性自动注入","link":"#_3-4-基础属性自动注入","children":[]},{"level":3,"title":"#3.5. Redis发布订阅模式","slug":"_3-5-redis发布订阅模式","link":"#_3-5-redis发布订阅模式","children":[]},{"level":3,"title":"#3.6. 通道管理","slug":"_3-6-通道管理","link":"#_3-6-通道管理","children":[]}]},{"level":2,"title":"#第2章 短信接收服务","slug":"第2章-短信接收服务","link":"#第2章-短信接收服务","children":[]},{"level":2,"title":"#1. 短信接收服务介绍","slug":"_1-短信接收服务介绍","link":"#_1-短信接收服务介绍","children":[]},{"level":2,"title":"#2. Redis消息队列","slug":"_2-redis消息队列","link":"#_2-redis消息队列","children":[{"level":3,"title":"#2.1 Redis队列介绍","slug":"_2-1-redis队列介绍","link":"#_2-1-redis队列介绍","children":[]},{"level":3,"title":"#2.2 案例演示","slug":"_2-2-案例演示","link":"#_2-2-案例演示","children":[]},{"level":3,"title":"#2.3 代码案例","slug":"_2-3-代码案例","link":"#_2-3-代码案例","children":[]}]},{"level":2,"title":"#3. 短信接收服务","slug":"_3-短信接收服务","link":"#_3-短信接收服务","children":[{"level":3,"title":"#3.1 需求分析-重点","slug":"_3-1-需求分析-重点","link":"#_3-1-需求分析-重点","children":[]},{"level":3,"title":"#3.2 项目结构","slug":"_3-2-项目结构","link":"#_3-2-项目结构","children":[]},{"level":3,"title":"#3.3 数据模型与类","slug":"_3-3-数据模型与类-1","link":"#_3-3-数据模型与类-1","children":[]},{"level":3,"title":"#3.4 消息存储","slug":"_3-4-消息存储","link":"#_3-4-消息存储","children":[]},{"level":3,"title":"#3.5 TCP接口","slug":"_3-5-tcp接口","link":"#_3-5-tcp接口","children":[]},{"level":3,"title":"#3.6 SDK","slug":"_3-6-sdk","link":"#_3-6-sdk","children":[]}]},{"level":2,"title":"#第3章 短信发送服务","slug":"第3章-短信发送服务","link":"#第3章-短信发送服务","children":[]},{"level":2,"title":"#1. 短信发送服务介绍","slug":"_1-短信发送服务介绍","link":"#_1-短信发送服务介绍","children":[]},{"level":2,"title":"#2. Redis实现分布式锁","slug":"_2-redis实现分布式锁","link":"#_2-redis实现分布式锁","children":[{"level":3,"title":"#2.1 SETNX","slug":"_2-1-setnx","link":"#_2-1-setnx","children":[]},{"level":3,"title":"#2.2 SET","slug":"_2-2-set","link":"#_2-2-set","children":[]},{"level":3,"title":"#2.3 代码实现","slug":"_2-3-代码实现","link":"#_2-3-代码实现","children":[]}]},{"level":2,"title":"#3. Spring Task定时任务","slug":"_3-spring-task定时任务","link":"#_3-spring-task定时任务","children":[{"level":3,"title":"#3.1 Spring Task介绍","slug":"_3-1-spring-task介绍","link":"#_3-1-spring-task介绍","children":[]},{"level":3,"title":"#3.2 代码案例","slug":"_3-2-代码案例","link":"#_3-2-代码案例","children":[]}]},{"level":2,"title":"#4. 短信发送服务","slug":"_4-短信发送服务","link":"#_4-短信发送服务","children":[{"level":3,"title":"#4.1 需求分析","slug":"_4-1-需求分析","link":"#_4-1-需求分析","children":[]},{"level":3,"title":"#4.2 项目结构","slug":"_4-2-项目结构","link":"#_4-2-项目结构","children":[]},{"level":3,"title":"#4.3 核心代码","slug":"_4-3-核心代码","link":"#_4-3-核心代码","children":[]},{"level":3,"title":"#4.4 功能实现","slug":"_4-4-功能实现","link":"#_4-4-功能实现","children":[]}]},{"level":2,"title":"#5对接阿里短信进行真实发送！","slug":"_5对接阿里短信进行真实发送","link":"#_5对接阿里短信进行真实发送","children":[]}],"git":{"updatedTime":1723726527000,"contributors":[{"name":"zqb","email":"2506956864@qq.com","commits":1}]},"filePathRelative":"message/README.md","excerpt":"\\n<h2>第1章 项目概述及管理端</h2>\\n<h2>1. 项目概述</h2>\\n<h3>1.1 背景介绍</h3>\\n<p>随着企业业务扩张、应用成倍的增加、短信规模化使用，传统短信平台的接入方式和单一的信息发送功能，已经不能完全满足现代企业管理的需求，所以统一入口、减少对接成本、同时兼顾多种短信业务、简单易行的操作与维护、高稳定、高可靠的移动信息化应用成为短信平台发展趋势。</p>\\n<p><img src=\\"https://www.ydlclass.com/doc21xnv/assets/image-20210916094348274.3b7c2821.png\\" alt=\\"image-20210916094348274\\"></p>"}');export{r as comp,k as data};
