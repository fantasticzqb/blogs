import{_ as s,c as n,o as a,a as e}from"./app-lCTfir8o.js";const p={},t=e(`<h1 id="rocketmq" tabindex="-1"><a class="header-anchor" href="#rocketmq"><span>RocketMQ</span></a></h1><h2 id="rocketmq基础篇" tabindex="-1"><a class="header-anchor" href="#rocketmq基础篇"><span>RocketMQ基础篇</span></a></h2><h3 id="_1-mq简介" tabindex="-1"><a class="header-anchor" href="#_1-mq简介"><span>1. MQ简介</span></a></h3><h4 id="_1-1-项目工程弊端" tabindex="-1"><a class="header-anchor" href="#_1-1-项目工程弊端"><span>1.1 项目工程弊端</span></a></h4><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210227005612570.05496644.png" alt="image-20210227005612570"></p><h4 id="_1-2-mq简介" tabindex="-1"><a class="header-anchor" href="#_1-2-mq简介"><span>1.2 MQ简介</span></a></h4><ol><li><p>MQ（Message Queue）消息队列，是一种用来保存消息数据的队列.</p><ol><li><p>队列：数据结构的一种，特征为 “先进先出”</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210227005644041.049e2350.png" alt="image-20210227005644041"></p></li><li><p>何为消息</p><ol><li>服务器间的业务请求 <ol><li>原始架构： <ol><li>服务器中的A功能需要调用B、C模块才能完成</li></ol></li><li>微服务架构： <ol><li>服务器A向服务器B发送要执行的操作（视为消息）</li><li>服务器A向服务器C发送要执行的操作（视为消息）</li></ol></li></ol></li></ol></li></ol></li><li><p>小节:MQ概念</p></li></ol><h4 id="_1-3-mq作用" tabindex="-1"><a class="header-anchor" href="#_1-3-mq作用"><span>1.3 MQ作用</span></a></h4><p>优势：</p><ul><li>应用解耦</li><li>异步提速</li><li>削峰填谷</li></ul><p>劣势：</p><ul><li>系统可用性降低</li><li>系统复杂度提高</li><li>一致性问题</li></ul><h4 id="_1-4-mq基本工作模式" tabindex="-1"><a class="header-anchor" href="#_1-4-mq基本工作模式"><span>1.4 MQ基本工作模式</span></a></h4><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210227011631473.cb178ec3.png" alt="image-20210227011631473"></p><p>应用解耦:（异步消息发送）</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210227011703071.844da7b4.png" alt="image-20210227011703071"></p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210227011721338.f6d6ce2a.png" alt="image-20210227011721338"></p><p>流量削锋:（异步消息发送）</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210227012322129.823cdf25.png" alt="image-20210227012322129"></p><h4 id="_1-5-mq优缺点分析" tabindex="-1"><a class="header-anchor" href="#_1-5-mq优缺点分析"><span>1.5 MQ优缺点分析</span></a></h4><p>优点（作用）:</p><ol><li>应用解耦</li><li>快速应用变更维护</li><li>流量削锋</li></ol><p>缺点:</p><ol><li>系统可用性降低</li><li>系统复杂度提高</li><li>异步消息机制 <ol><li>消息顺序性</li><li>消息丢失</li><li>消息一致性</li><li>消息重复使用</li></ol></li></ol><h4 id="_1-6-mq产品介绍" tabindex="-1"><a class="header-anchor" href="#_1-6-mq产品介绍"><span>1.6 MQ产品介绍</span></a></h4><ol><li><p>ActiveMQ</p><p>java语言实现，万级数据吞吐量，处理速度ms级，主从架构，<strong>成熟度高</strong></p></li><li><p>RabbitMQ</p><p><strong>erlang语言实现</strong>，万级数据吞吐量，<strong>处理速度us级</strong>，主从架构，</p></li><li><p>RocketMQ</p><p>java语言实现，<strong>十万级</strong>数据吞吐量，处理速度ms级，分布式架构，功能强大，扩展性强</p></li><li><p>kafka</p><p>scala语言实现，<strong>十万级</strong>数据吞吐量，处理速度ms级，分布式架构，功能较少，应用于大数据较多</p></li></ol><p><strong>RocketMQ</strong></p><ol><li>RocketMQ是阿里开源的一款非常优秀中间件产品，脱胎于阿里的另一款队列技术MetaQ，后捐赠给<strong>Apache</strong>基金会 作为一款孵化技术，仅仅经历了一年多的时间就成为Apache基金会的顶级项目。并且它现在已经在阿里内部被广泛 的应用，并且经受住了多次双十一的这种极致场景的压力（2017年的双十一，RocketMQ流转的消息量达到了万亿 级，峰值TPS达到5600万）</li><li>解决所有缺点</li></ol><h3 id="_2-环境搭建" tabindex="-1"><a class="header-anchor" href="#_2-环境搭建"><span>2. 环境搭建</span></a></h3><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211151842484.8d7fe268.png" alt="image-20201211151842484"></p><h4 id="_2-1-基础概念" tabindex="-1"><a class="header-anchor" href="#_2-1-基础概念"><span>2.1 基础概念</span></a></h4><ol><li>生产者</li><li>消费者</li><li>消息服务器</li><li>命名服务器</li><li>消息 <ol><li>主题</li><li>标签</li></ol></li><li>心跳</li><li>监听器</li><li>拉取消费、推动消费</li><li>注册</li></ol><h4 id="_2-2-安装" tabindex="-1"><a class="header-anchor" href="#_2-2-安装"><span>2.2 安装</span></a></h4><ol><li>命名服务器</li><li>消息服务器</li></ol><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211152332969.5ba50bce.png" alt="image-20201211152332969"></p><h4 id="_2-3-下载" tabindex="-1"><a class="header-anchor" href="#_2-3-下载"><span>2.3 下载</span></a></h4><p>⚫ https://www.apache.org/</p><h4 id="_2-4-linux安装过程" tabindex="-1"><a class="header-anchor" href="#_2-4-linux安装过程"><span>2.4 linux安装过程</span></a></h4><ol><li><p>步骤1：安装JDK（1.8）</p></li><li><p>步骤2：上传压缩包（zip）</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line">yum -y install lrzsz </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">rz</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>步骤3：解压缩</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">unzip rocketmq-all-4.5.2-bin-release.zip</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>步骤4：修改目录名称</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">mv rocketmq-all-4.5.2-bin-release rocketmq</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><p><strong>启动服务器</strong></p><ol><li>步骤1：启动命名服务器（bin目录下）</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">sh mqnamesrv</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><ol><li><p>步骤2：启动消息服务器（bin目录下）</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">sh mqbroker -n localhost:9876</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p>修改runbroker.sh文件中有关内存的配置（调整的与当前虚拟机内存匹配即可，推荐256m-128m）</p></li></ol><p><strong>测试服务器环境</strong></p><ol><li><p>步骤1：配置命名服务器地址</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line">export NAMESRV_ADDR=localhost:9876</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p></li><li><p>步骤2：启动生产者程序客户端（bin目录下）</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">sh tools.sh org.apache.rocketmq.example.quickstart.Producer</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p>启动后产生大量日志信息（注意该信息是测试程序中自带的，不具有通用性，仅供学习查阅参考）</p></li><li><p>步骤3：启动消费者程序客户端（bin目录下）</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">sh tools.sh org.apache.rocketmq.example.quickstart.Consumer</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p>启动后产生大量日志信息</p></li></ol><h4 id="_2-5-windows安装" tabindex="-1"><a class="header-anchor" href="#_2-5-windows安装"><span>2.5 windows安装</span></a></h4><h5 id="_2-5-1系统环境变量配置" tabindex="-1"><a class="header-anchor" href="#_2-5-1系统环境变量配置"><span>2.5.1系统环境变量配置</span></a></h5><p>1、右键我的电脑--&gt;属性</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210216112544747.73835ac5.png" alt="image-20210216112544747"></p><p>2、系统属性--环境变量</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210216112631558.7e29712b.png" alt="image-20210216112631558"></p><p>3、系统变量中--&gt;新建</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210216112735780.a6597055.png" alt="image-20210216112735780"></p><p>变量名：ROCKETMQ_HOME</p><p>变量值：MQ解压路径\\MQ文件夹名</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210216112826156.50ae15d0.png" alt="image-20210216112826156"></p><h5 id="_2-5-2启动" tabindex="-1"><a class="header-anchor" href="#_2-5-2启动"><span>2.5.2启动</span></a></h5><p>1、<strong>启动NAMESERVER</strong></p><p>Cmd命令框执行进入至‘MQ文件夹\\bin’下 端口9876</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">start mqnamesrv.cmd</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210216110141279.99db0625.png" alt="image-20210216110141279"></p><p>2、<strong>启动BROKER</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">start mqbroker.cmd -n 127.0.0.1:9876 autoCreateTopicEnable=true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210216111405243.60f804d4.png" alt="image-20210216111405243"></p><p><strong>注意</strong>：闪退回命令行</p><p>删除C:\\Users\\”当前系统用户名”\\store下的所有文件。</p><h5 id="_2-5-3测试" tabindex="-1"><a class="header-anchor" href="#_2-5-3测试"><span>2.5.3测试</span></a></h5><p>1、<strong>新建环境变量</strong></p><p>变量名：NAMESRV_ADDR</p><p>变量值：localhost:9876</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210216112924986.d254a99f.png" alt="image-20210216112924986"></p><p>2、测试生产者发送消息</p><p>bin目录下</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">tools.cmd  org.apache.rocketmq.example.quickstart.Producer</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p>3、测试消费者接收消息</p><p>bin目录下</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">tools.cmd org.apache.rocketmq.example.quickstart.Consumer</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="_2-5-4控制台安装" tabindex="-1"><a class="header-anchor" href="#_2-5-4控制台安装"><span>2.5.4控制台安装</span></a></h5><p>1下载源码</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git clone https://github.com/apache/rocketmq-externals.git</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2进入rocketmq-externals\\rocketmq-console 工程，编译源码</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">mvn clean package -Dmaven.test.skip=true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>3target 目录生成 jar包</p><p>4运行</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">java -jar rocketmq-console-ng-2.0.0.jar</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>5访问 http://localhost:8080/#/</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210216174310729.6bcf3969.png" alt="image-20210216174310729"></p><h3 id="_3-消息发送-重点" tabindex="-1"><a class="header-anchor" href="#_3-消息发送-重点"><span>3. 消息发送（重点）</span></a></h3><h4 id="_3-1-主要内容" tabindex="-1"><a class="header-anchor" href="#_3-1-主要内容"><span>3.1 主要内容</span></a></h4><ol><li>基于Java环境构建消息发送与消息接收基础程序 <ol><li>单生产者单消费者</li><li>单生产者多消费者</li><li>多生产者多消费者</li></ol></li><li>发送不同类型的消息 <ol><li>同步消息</li><li>异步消息</li><li>单向消息</li></ol></li><li>特殊的消息发送 <ol><li>延时消息</li><li>批量消息</li></ol></li><li>特殊的消息接收 <ol><li>消息过滤</li></ol></li><li>消息发送与接收顺序控制</li><li>事务消息</li></ol><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211153150220.212d1185.png" alt="image-20201211153150220"></p><h4 id="_3-2-消息发送与接收开发流程" tabindex="-1"><a class="header-anchor" href="#_3-2-消息发送与接收开发流程"><span>3.2 消息发送与接收开发流程</span></a></h4><ol><li>谁来发？</li><li>发给谁？</li><li>怎么发？</li><li>发什么？</li><li>发的结果是什么？</li><li>打扫战场</li></ol><h4 id="_3-3-单生产者单消费者消息发送-onetoone" tabindex="-1"><a class="header-anchor" href="#_3-3-单生产者单消费者消息发送-onetoone"><span>3.3 单生产者单消费者消息发送（OneToOne）</span></a></h4><p>1新建maven项目rocketmq</p><p>2导入RocketMQ客户端坐标</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.rocketmq<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>rocketmq-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5</p><p>3生产者 com.ydl.base.Producer</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>base</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQClientException</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">DefaultMQProducer</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">SendResult</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">Message</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Producer</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token doc-comment comment">/**</span>
<span class="line">         1. 谁来发？</span>
<span class="line">         2. 发给谁？</span>
<span class="line">         3. 怎么发？</span>
<span class="line">         4. 发什么？</span>
<span class="line">         5. 发的结果是什么？</span>
<span class="line">         6. 打扫战场</span>
<span class="line">         **/</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//1.创建一个发送消息的对象Producer</span></span>
<span class="line">        <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;group1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//2.设定发送的命名服务器地址</span></span>
<span class="line">        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//3.1启动发送的服务</span></span>
<span class="line">        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//4.创建要发送的消息对象,指定topic，指定内容body</span></span>
<span class="line">        <span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;topic1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello rocketmq&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//3.2发送消息</span></span>
<span class="line">        <span class="token class-name">SendResult</span> result <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;返回结果：&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//5.关闭连接</span></span>
<span class="line">        producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4消费者</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>base</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span></span><span class="token class-name">DefaultMQPushConsumer</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">ConsumeConcurrentlyContext</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">ConsumeConcurrentlyStatus</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">MessageListenerConcurrently</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQClientException</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">MessageExt</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Consumer</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token doc-comment comment">/**</span>
<span class="line">         1. 谁来发？</span>
<span class="line">         2. 发给谁？</span>
<span class="line">         3. 怎么发？</span>
<span class="line">         4. 发什么？</span>
<span class="line">         5. 发的结果是什么？</span>
<span class="line">         6. 打扫战场</span>
<span class="line">         **/</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//1.创建一个接收消息的对象Consumer</span></span>
<span class="line">        <span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">&quot;group1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//2.设定接收的命名服务器地址</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//3.设置接收消息对应的topic,对应的sub标签为任意</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&quot;topic1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//3.开启监听，用于接收消息</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token class-name">ConsumeConcurrentlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">,</span> <span class="token class-name">ConsumeConcurrentlyContext</span> consumeConcurrentlyContext<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">//遍历消息</span></span>
<span class="line">                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageExt</span> msg <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;收到消息：&quot;</span><span class="token operator">+</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span><span class="token constant">CONSUME_SUCCESS</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//4.启动接收消息的服务</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;接受消息服务已经开启！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//5 不要关闭消费者！</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45</p><h4 id="_3-4-单生产者多消费者消息发送-onetomany" tabindex="-1"><a class="header-anchor" href="#_3-4-单生产者多消费者消息发送-onetomany"><span>3.4 单生产者多消费者消息发送（OneToMany）</span></a></h4><p><strong>1生产者</strong> com.ydl.one2many.Producer</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">		<span class="token comment">//1.创建一个发送消息的对象Producer</span></span>
<span class="line">        <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;group1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//2.设定发送的命名服务器地址</span></span>
<span class="line">        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//3.1启动发送的服务</span></span>
<span class="line">        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//4.创建要发送的消息对象,指定topic，指定内容body</span></span>
<span class="line">            <span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;topic1&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;hello rocketmq&quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">//3.2发送消息</span></span>
<span class="line">            <span class="token class-name">SendResult</span> result <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;返回结果：&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token comment">//5.关闭连接</span></span>
<span class="line">        producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</p><p><strong>2消费者</strong>（负载均衡模式：默认模式）</p><p>开启多实例运行</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210216122333256.5ba41b96.png" alt="image-20210216122333256"></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">        <span class="token comment">//1.创建一个接收消息的对象Consumer</span></span>
<span class="line">        <span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">&quot;group1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//2.设定接收的命名服务器地址</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//3.设置接收消息对应的topic,对应的sub标签为任意</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&quot;topic1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//设置当前消费者的消费模式（默认模式：负载均衡）</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">setMessageModel</span><span class="token punctuation">(</span><span class="token class-name">MessageModel</span><span class="token punctuation">.</span><span class="token constant">CLUSTERING</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//3.开启监听，用于接收消息</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token class-name">ConsumeConcurrentlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">,</span> <span class="token class-name">ConsumeConcurrentlyContext</span> consumeConcurrentlyContext<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">//遍历消息</span></span>
<span class="line">                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageExt</span> msg <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;收到消息：&quot;</span><span class="token operator">+</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;消息是：&quot;</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span><span class="token constant">CONSUME_SUCCESS</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//4.启动接收消息的服务</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;接受消息服务已经开启！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//5 不要关闭消费者！</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25</p><p>注意：同一个消费者 多份。争抢topic数据。</p><h4 id="_3-5-单生产者多消费者消息发送-onetomany" tabindex="-1"><a class="header-anchor" href="#_3-5-单生产者多消费者消息发送-onetomany"><span>3.5 单生产者多消费者消息发送（OneToMany）</span></a></h4><p>消费者（广播模式）</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">        <span class="token comment">//1.创建一个接收消息的对象Consumer</span></span>
<span class="line">        <span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">&quot;group1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//2.设定接收的命名服务器地址</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//3.设置接收消息对应的topic,对应的sub标签为任意</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&quot;topic1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//设置当前消费者的消费模式（默认模式：负载均衡）</span></span>
<span class="line">        <span class="token comment">//consumer.setMessageModel(MessageModel.CLUSTERING);</span></span>
<span class="line">        <span class="token comment">//设置当前消费者的消费模式（广播模式）</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">setMessageModel</span><span class="token punctuation">(</span><span class="token class-name">MessageModel</span><span class="token punctuation">.</span><span class="token constant">BROADCASTING</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//3.开启监听，用于接收消息</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token class-name">ConsumeConcurrentlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">,</span> <span class="token class-name">ConsumeConcurrentlyContext</span> consumeConcurrentlyContext<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">//遍历消息</span></span>
<span class="line">                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageExt</span> msg <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;收到消息：&quot;</span><span class="token operator">+</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;消息是：&quot;</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span><span class="token constant">CONSUME_SUCCESS</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//4.启动接收消息的服务</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;接受消息服务已经开启！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//5 不要关闭消费者！</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27</p><h4 id="_3-6-多生产者多消费者消息发送-manytomany" tabindex="-1"><a class="header-anchor" href="#_3-6-多生产者多消费者消息发送-manytomany"><span>3.6 多生产者多消费者消息发送（ManyToMany）</span></a></h4><ol><li>多生产者产生的消息可以被同一个消费者消费，也可以被多个消费者消费</li></ol><h4 id="_3-7-小节" tabindex="-1"><a class="header-anchor" href="#_3-7-小节"><span>3.7 小节</span></a></h4><ol><li>消息发送 <ol><li>One-To-One（基础发送与基础接收）</li><li>One-To-Many（负载均衡模式与广播模式）</li><li>Many-To-Many</li></ol></li></ol><h3 id="_4-消息类别" tabindex="-1"><a class="header-anchor" href="#_4-消息类别"><span>4 消息类别</span></a></h3><ol><li>同步消息</li><li>异步消息</li><li>单向消息</li></ol><h4 id="_4-1-同步消息" tabindex="-1"><a class="header-anchor" href="#_4-1-同步消息"><span>4.1 同步消息</span></a></h4><p>特征：即时性较强，重要的消息，且必须有回执的消息，例如短信，通知（转账成功）</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211154023471.76f3f927.png" alt="image-20201211154023471"></p><p>代码实现</p><p>com.ydl.messageType拷贝producer</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">SendResult</span> result <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><h4 id="_4-2-异步消息" tabindex="-1"><a class="header-anchor" href="#_4-2-异步消息"><span>4.2 异步消息</span></a></h4><p>特征：即时性较弱，但需要有回执的消息，例如订单中的某些信息</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211154108518.8c569153.png" alt="image-20201211154108518"></p><p>代码实现</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">        <span class="token comment">//1.创建一个发送消息的对象Producer</span></span>
<span class="line">        <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;group1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//2.设定发送的命名服务器地址</span></span>
<span class="line">        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//3.1启动发送的服务</span></span>
<span class="line">        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//4.创建要发送的消息对象,指定topic，指定内容body</span></span>
<span class="line">            <span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;topic1&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;hello rocketmq&quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">//3.2 同步消息</span></span>
<span class="line">            <span class="token comment">//SendResult result = producer.send(msg);</span></span>
<span class="line">            <span class="token comment">//System.out.println(&quot;返回结果：&quot; + result);</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">//异步消息</span></span>
<span class="line">            producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SendCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">//表示成功返回结果</span></span>
<span class="line">                <span class="token annotation punctuation">@Override</span></span>
<span class="line">                <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSuccess</span><span class="token punctuation">(</span><span class="token class-name">SendResult</span> sendResult<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sendResult<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token comment">//表示发送消息失败</span></span>
<span class="line">                <span class="token annotation punctuation">@Override</span></span>
<span class="line">                <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onException</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>throwable<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;消息&quot;</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">&quot;发完了，做业务逻辑去了！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token comment">//休眠10秒</span></span>
<span class="line">        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//5.关闭连接</span></span>
<span class="line">        producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33</p><h4 id="_4-3-单向消息" tabindex="-1"><a class="header-anchor" href="#_4-3-单向消息"><span>4.3 单向消息</span></a></h4><p>特征：不需要有回执的消息，例如日志类消息</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211154145199.61ef2761.png" alt="image-20201211154145199"></p><p>代码实现</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">producer<span class="token punctuation">.</span><span class="token function">sendOneway</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><h4 id="_4-4-延时消息" tabindex="-1"><a class="header-anchor" href="#_4-4-延时消息"><span>4.4 延时消息</span></a></h4><p>消息发送时并不直接发送到消息服务器，而是根据设定的等待时间到达，起到延时到达的缓冲作用</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;topic3&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;延时消息：hello rocketmq &quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//设置延时等级3,这个消息将在10s之后发送(现在只支持固定的几个时间,详看delayTimeLevel)</span></span>
<span class="line">msg<span class="token punctuation">.</span><span class="token function">setDelayTimeLevel</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">SendResult</span> result <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;返回结果：&quot;</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5</p><p>目前支持的消息时间</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token class-name">String</span> messageDelayLevel <span class="token operator">=</span> <span class="token string">&quot;1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><h4 id="_4-5-批量消息" tabindex="-1"><a class="header-anchor" href="#_4-5-批量消息"><span>4.5 批量消息</span></a></h4><p>批量发送消息能显著提高传递小消息的性能.</p><p>发送批量消息:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Message</span><span class="token punctuation">&gt;</span></span> msgList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Message</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Message</span> msg1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;topic1&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;hello rocketmq1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Message</span> msg2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;topic1&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;hello rocketmq2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Message</span> msg3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;topic1&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;hello rocketmq3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">SendResult</span> result <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msgList<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11</p><p><strong>注意限制</strong>：</p><p>1这些批量消息应该有相同的topic</p><p>2相同的waitStoreMsgOK</p><p>3不能是延时消息</p><p>4消息内容总长度不超过4M</p><p>消息内容总长度包含如下：</p><ul><li>topic（字符串字节数）</li><li>body （字节数组长度）</li><li>消息追加的属性（key与value对应字符串字节数）</li><li>日志（固定20字节）</li></ul><h4 id="_4-6-消息过滤" tabindex="-1"><a class="header-anchor" href="#_4-6-消息过滤"><span>4.6 消息过滤</span></a></h4><h5 id="_4-6-1分类过滤" tabindex="-1"><a class="header-anchor" href="#_4-6-1分类过滤"><span>4.6.1分类过滤</span></a></h5><p>按照tag过滤信息。</p><p><strong>生产者</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;topic6&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;tag2&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;消息过滤按照tag：hello rocketmq 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p><strong>消费者</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">//接收消息的时候，除了制定topic，还可以指定接收的tag,*代表任意tag</span></span>
<span class="line">consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&quot;topic6&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;tag1 || tag2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2</p><h5 id="_4-6-2语法过滤-属性过滤-语法过滤-sql过滤" tabindex="-1"><a class="header-anchor" href="#_4-6-2语法过滤-属性过滤-语法过滤-sql过滤"><span>4.6.2语法过滤（属性过滤/语法过滤/SQL过滤）</span></a></h5><p>基本语法</p><ul><li>数值比较，比如：<strong>&gt;，&gt;=，&lt;，&lt;=，BETWEEN，=；</strong></li><li>字符比较，比如：<strong>=，&lt;&gt;，IN；</strong></li><li><strong>IS NULL</strong> 或者 <strong>IS NOT NULL；</strong></li><li>逻辑符号 <strong>AND，OR，NOT；</strong></li></ul><p>常量支持类型为：</p><ul><li>数值，比如：<strong>123，3.1415；</strong></li><li>字符，比如：<strong>&#39;abc&#39;，必须用单引号包裹起来；</strong></li><li><strong>NULL</strong>，特殊的常量</li><li>布尔值，<strong>TRUE</strong> 或 <strong>FALSE</strong></li></ul><p><strong>生产者</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">//为消息添加属性</span></span>
<span class="line">msg<span class="token punctuation">.</span><span class="token function">putUserProperty</span><span class="token punctuation">(</span><span class="token string">&quot;vip&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">msg<span class="token punctuation">.</span><span class="token function">putUserProperty</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3</p><p><strong>消费者</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">//使用消息选择器来过滤对应的属性，语法格式为类SQL语法</span></span>
<span class="line">consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&quot;topic7&quot;</span><span class="token punctuation">,</span> <span class="token class-name">MessageSelector</span><span class="token punctuation">.</span><span class="token function">bySql</span><span class="token punctuation">(</span><span class="token string">&quot;age &gt;= 18&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&quot;topic6&quot;</span><span class="token punctuation">,</span> <span class="token class-name">MessageSelector</span><span class="token punctuation">.</span><span class="token function">bySql</span><span class="token punctuation">(</span><span class="token string">&quot;name = &#39;litiedan&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3</p><p><strong>注意</strong>：SQL过滤需要依赖服务器的功能支持，在broker.conf配置文件中添加对应的功能项，并开启对应功能</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">enablePropertyFilter</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p>重启broker</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">start mqbroker.cmd -n 127.0.0.1:9876 autoCreateTopicEnable=true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p>或者直接cmd中输入</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">mqadmin.cmd updateBrokerConfig -blocalhost:10911 -kenablePropertyFilter -vtrue</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p>页面查看开启与否</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210216175129980.81f41d00.png" alt="image-20210216175129980"></p><h3 id="_5springboot整合" tabindex="-1"><a class="header-anchor" href="#_5springboot整合"><span>5springboot整合</span></a></h3><p>新建 springboot项目</p><h4 id="_5-1导包" tabindex="-1"><a class="header-anchor" href="#_5-1导包"><span>5.1导包</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"> 	&lt;dependency&gt;</span>
<span class="line">        &lt;groupId&gt;org.apache.rocketmq&lt;/groupId&gt;</span>
<span class="line">        &lt;artifactId&gt;rocketmq-spring-boot-starter&lt;/artifactId&gt;</span>
<span class="line">        &lt;version&gt;2.0.3&lt;/version&gt;</span>
<span class="line">    &lt;/dependency&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5</p><h4 id="_5-2配置文件" tabindex="-1"><a class="header-anchor" href="#_5-2配置文件"><span>5.2配置文件</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">rocketmq.name-server=localhost:9876</span>
<span class="line">rocketmq.producer.group=demo_producer</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2</p><h4 id="_5-3实体类" tabindex="-1"><a class="header-anchor" href="#_5-3实体类"><span>5.3实体类</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">public class user implements Serializable {</span>
<span class="line">    String userName;</span>
<span class="line">    String userId;</span>
<span class="line"></span>
<span class="line">    public user(){</span>
<span class="line"></span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public user(String userName, String userId) {</span>
<span class="line">        this.userName = userName;</span>
<span class="line">        this.userId = userId;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    @Override</span>
<span class="line">    public String toString() {</span>
<span class="line">        return &quot;demoEntity{&quot; +</span>
<span class="line">                &quot;userName=&#39;&quot; + userName + &#39;\\&#39;&#39; +</span>
<span class="line">                &quot;, userId=&#39;&quot; + userId + &#39;\\&#39;&#39; +</span>
<span class="line">                &#39;}&#39;;</span>
<span class="line">    }</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20</p><h4 id="_5-4生产者" tabindex="-1"><a class="header-anchor" href="#_5-4生产者"><span>5.4生产者</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">@RestController</span>
<span class="line">public class DemoProducers {</span>
<span class="line">    @Autowired</span>
<span class="line">    private RocketMQTemplate template;</span>
<span class="line"></span>
<span class="line">    @RequestMapping(&quot;/producer&quot;)</span>
<span class="line">    public String producersMessage() {</span>
<span class="line">        User user = new User(&quot;sharfine&quot;, &quot;123456789&quot;);</span>
<span class="line">        template.convertAndSend(&quot;demo-topic&quot;, user);</span>
<span class="line">        return JSON.toJSONString(user);</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-5消费者" tabindex="-1"><a class="header-anchor" href="#_5-5消费者"><span>5.5消费者</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">@Service</span>
<span class="line">@RocketMQMessageListener(topic = &quot;demo-topic&quot;, consumerGroup = &quot;demo_consumer&quot;)</span>
<span class="line">public class DemoConsumers1 implements RocketMQListener&lt;user&gt; {</span>
<span class="line">    @Override</span>
<span class="line">    public void onMessage(user user) {</span>
<span class="line">        System.out.println(&quot;Consumers1接收消息:&quot; + demoEntity.toString());</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-6其他消息" tabindex="-1"><a class="header-anchor" href="#_5-6其他消息"><span>5.6其他消息</span></a></h4><p><strong>异步发送</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">       rocketMQTemplate.asyncSend(&quot;topic9&quot;, user, new SendCallback() {</span>
<span class="line">            @Override</span>
<span class="line">            public void onSuccess(SendResult sendResult) {</span>
<span class="line">                System.out.println(sendResult);</span>
<span class="line">            }</span>
<span class="line"></span>
<span class="line">            @Override</span>
<span class="line">            public void onException(Throwable throwable) {</span>
<span class="line">                System.out.println(throwable);</span>
<span class="line">            }</span>
<span class="line">        });</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12</p><p><strong>单向发送</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">rocketMQTemplate.sendOneWay(&quot;topic9&quot;,user);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p><strong>延时消息</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">rocketMQTemplate.syncSend(&quot;topic9&quot;, MessageBuilder.withPayload(&quot;test delay&quot;).build(),2000,2);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p><strong>批量</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">List&lt;Message&gt; msgList = new ArrayList&lt;&gt;();</span>
<span class="line">msgList.add(new Message(&quot;topic6&quot;, &quot;tag1&quot;, &quot;msg1&quot;.getBytes()));</span>
<span class="line">msgList.add(new Message(&quot;topic6&quot;, &quot;tag1&quot;, &quot;msg2&quot;.getBytes()));</span>
<span class="line">msgList.add(new Message(&quot;topic6&quot;, &quot;tag1&quot;, &quot;msg3&quot;.getBytes()));        rocketMQTemplate.syncSend(&quot;topic8&quot;,msgList,1000);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4</p><p><strong>Tag过滤</strong></p><p>消费者</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">@RocketMQMessageListener(topic = &quot;topic9&quot;,consumerGroup = &quot;group1&quot;,selectorExpression = &quot;tag1&quot;)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><p>Sql过滤</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">@RocketMQMessageListener(topic = &quot;topic9&quot;,consumerGroup = &quot;group1&quot;,selectorExpression = &quot;age&gt;18&quot;</span>
<span class="line">        ,selectorType= SelectorType.SQL92)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2</p><p>改消息模式</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">@RocketMQMessageListener(topic = &quot;topic9&quot;,consumerGroup = &quot;group1&quot;,messageModel = MessageModel.BROADCASTING)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><h2 id="rocketmq-进阶篇" tabindex="-1"><a class="header-anchor" href="#rocketmq-进阶篇"><span>RocketMQ 进阶篇</span></a></h2><h3 id="_1消息的特殊处理" tabindex="-1"><a class="header-anchor" href="#_1消息的特殊处理"><span>1消息的特殊处理</span></a></h3><h4 id="_1-1-错乱的消息顺序" tabindex="-1"><a class="header-anchor" href="#_1-1-错乱的消息顺序"><span>1.1 错乱的消息顺序</span></a></h4><p>原因</p><p>消息有序指的是可以按照消息的发送顺序来消费(FIFO)。RocketMQ可以严格的保证消息有序，可以分为分区有序或者全局有序。</p><p>顺序消费的原理解析，在默认的情况下消息发送会采取Round Robin轮询方式把消息发送到不同的queue(分区队列)；而消费消息的时候从多个queue上拉取消息，这种情况发送和消费是不能保证顺序。但是如果控制发送的顺序消息只依次发送到同一个queue中，消费的时候只从这个queue上依次拉取，则就保证了顺序。当发送和消费参与的queue只有一个，则是全局有序；如果多个queue参与，则为分区有序，即相对每个queue，消息都是有序的。</p><p>下面用订单进行分区有序的示例。一个订单的顺序流程是：创建、付款、推送、完成。订单号相同的消息会被先后发送到同一个队列中，消费时，同一个OrderId获取到的肯定是同一个队列。</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210227193832410.dd83739c.png" alt="image-20210227193832410"></p><p>先读到第一个订单的创建和完成消息</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210227193914094.155711c3.png" alt="image-20210227193914094"></p><p>想要的效果</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210227194435616.4d9e4f37.png" alt="image-20210227194435616"></p><h4 id="_1-2-顺序消息" tabindex="-1"><a class="header-anchor" href="#_1-2-顺序消息"><span>1.2 顺序消息</span></a></h4><p>1.2.1订单步骤实体类</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">package com.ydl.order.domain;</span>
<span class="line"></span>
<span class="line">/**</span>
<span class="line"> * 订单的步骤</span>
<span class="line"> */</span>
<span class="line">public class OrderStep {</span>
<span class="line">    private long orderId;</span>
<span class="line">    private String desc;</span>
<span class="line"></span>
<span class="line">    public long getOrderId() {</span>
<span class="line">        return orderId;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public void setOrderId(long orderId) {</span>
<span class="line">        this.orderId = orderId;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public String getDesc() {</span>
<span class="line">        return desc;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public void setDesc(String desc) {</span>
<span class="line">        this.desc = desc;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    @Override</span>
<span class="line">    public String toString() {</span>
<span class="line">        return &quot;OrderStep{&quot; +</span>
<span class="line">                &quot;orderId=&quot; + orderId +</span>
<span class="line">                &quot;, desc=&#39;&quot; + desc + &#39;\\&#39;&#39; +</span>
<span class="line">                &#39;}&#39;;</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34</p><p>1.2.1发送消息</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>order</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>ydl<span class="token punctuation">.</span>order<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">OrderStep</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">DefaultMQProducer</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">MessageQueueSelector</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">SendResult</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">Message</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">MessageQueue</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">SimpleDateFormat</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Producer</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;group1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderStep</span><span class="token punctuation">&gt;</span></span> orderList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Producer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">buildOrders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//设置消息进入到指定的消息队列中</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">OrderStep</span> order <span class="token operator">:</span> orderList<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;topic1&quot;</span><span class="token punctuation">,</span> order<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">//发送时要指定对应的消息队列选择器</span></span>
<span class="line">            <span class="token class-name">SendResult</span> result <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MessageQueueSelector</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">//设置当前消息发送时使用哪一个消息队列</span></span>
<span class="line">                <span class="token keyword">public</span> <span class="token class-name">MessageQueue</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">,</span> <span class="token class-name">Message</span> message<span class="token punctuation">,</span> <span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token comment">//根据发送的信息不同，选择不同的消息队列</span></span>
<span class="line">                    <span class="token comment">//根据id来选择一个消息队列的对象，并返回-&gt;id得到int值</span></span>
<span class="line">                    <span class="token keyword">long</span> orderId <span class="token operator">=</span> order<span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                    <span class="token keyword">long</span> mqIndex <span class="token operator">=</span> orderId <span class="token operator">%</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                    <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> mqIndex<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//for (int i = 0; i &lt; 10; i++) {</span></span>
<span class="line">        <span class="token comment">//    Message msg = new Message(&quot;topic1&quot;, (&quot;hello rocketmq&quot;+i).getBytes(&quot;UTF-8&quot;));</span></span>
<span class="line">        <span class="token comment">//    SendResult result = producer.send(msg);</span></span>
<span class="line">        <span class="token comment">//    System.out.println(&quot;返回结果：&quot; + result);</span></span>
<span class="line">        <span class="token comment">//}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 生成模拟订单数据</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderStep</span><span class="token punctuation">&gt;</span></span> <span class="token function">buildOrders</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderStep</span><span class="token punctuation">&gt;</span></span> orderList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderStep</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">OrderStep</span> orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;创建&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">2L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;创建&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;付款&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">3L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;创建&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">2L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;付款&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">3L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;付款&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">2L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;完成&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;推送&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">3L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;完成&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;完成&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> orderList<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109</p><p>1.2.2接收消息</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">         <span class="token comment">//使用单线程的模式从消息队列中取数据，一个线程绑定一个消息队列</span></span>
<span class="line">		consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerOrderly</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//使用MessageListenerOrderly接口后，对消息队列的处理由一个消息队列多个线程服务，转化为一个消息队列一个线程服务</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token class-name">ConsumeOrderlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">,</span> <span class="token class-name">ConsumeOrderlyContext</span> consumeOrderlyContext<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageExt</span> msg <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;。消息：&quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;。queueId:&quot;</span><span class="token operator">+</span>msg<span class="token punctuation">.</span><span class="token function">getQueueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token class-name">ConsumeOrderlyStatus</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10</p><h4 id="_1-3-事务消息" tabindex="-1"><a class="header-anchor" href="#_1-3-事务消息"><span>1.3 事务消息</span></a></h4><ol><li>正常事务过程</li><li>事务补偿过程</li></ol><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211160454763.88ac51a3.png" alt="image-20201211160454763"></p><h4 id="_1-4-事务消息状态" tabindex="-1"><a class="header-anchor" href="#_1-4-事务消息状态"><span>1.4 事务消息状态</span></a></h4><ol><li>提交状态：允许进入队列，此消息与非事务消息无区别</li><li>回滚状态：不允许进入队列，此消息等同于未发送过</li><li>中间状态：完成了half消息的发送，未对MQ进行二次状态确认</li><li>注意：事务消息仅与生产者有关，与消费者无关</li></ol><h4 id="_1-5-事务消息" tabindex="-1"><a class="header-anchor" href="#_1-5-事务消息"><span>1.5 事务消息</span></a></h4><p>提交状态</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">//事务消息使用的生产者是TransactionMQProducer</span></span>
<span class="line"><span class="token class-name">TransactionMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransactionMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;group1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//添加本地事务对应的监听</span></span>
<span class="line">producer<span class="token punctuation">.</span><span class="token function">setTransactionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TransactionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token comment">//正常事务过程</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">LocalTransactionState</span> <span class="token function">executeLocalTransaction</span><span class="token punctuation">(</span><span class="token class-name">Message</span> message<span class="token punctuation">,</span> <span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token keyword">return</span> <span class="token class-name">LocalTransactionState</span><span class="token punctuation">.</span><span class="token constant">COMMIT_MESSAGE</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">//事务补偿过程</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">LocalTransactionState</span> <span class="token function">checkLocalTransaction</span><span class="token punctuation">(</span><span class="token class-name">MessageExt</span> messageExt<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;topic8&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;事务消息：hello rocketmq &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">SendResult</span> result <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">sendMessageInTransaction</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;返回结果：&quot;</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19</p><p>回滚状态</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">            producer<span class="token punctuation">.</span><span class="token function">setTransactionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TransactionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//正常事务</span></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token class-name">LocalTransactionState</span> <span class="token function">executeLocalTransaction</span><span class="token punctuation">(</span><span class="token class-name">Message</span> msg<span class="token punctuation">,</span> <span class="token class-name">Object</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token class-name">LocalTransactionState</span><span class="token punctuation">.</span><span class="token constant">ROLLBACK_MESSAGE</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token comment">//事务补偿</span></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token class-name">LocalTransactionState</span> <span class="token function">checkLocalTransaction</span><span class="token punctuation">(</span><span class="token class-name">MessageExt</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12</p><p>中间状态</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TransactionMQProducer</span> producer<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">TransactionMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;group1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        producer<span class="token punctuation">.</span><span class="token function">setTransactionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TransactionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//正常事务</span></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token class-name">LocalTransactionState</span> <span class="token function">executeLocalTransaction</span><span class="token punctuation">(</span><span class="token class-name">Message</span> msg<span class="token punctuation">,</span> <span class="token class-name">Object</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token class-name">LocalTransactionState</span><span class="token punctuation">.</span><span class="token constant">UNKNOW</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token comment">//事务补偿 正常执行UNKNOW才会触发</span></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token class-name">LocalTransactionState</span> <span class="token function">checkLocalTransaction</span><span class="token punctuation">(</span><span class="token class-name">MessageExt</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;事务补偿&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token class-name">LocalTransactionState</span><span class="token punctuation">.</span><span class="token constant">COMMIT_MESSAGE</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;topic13&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello rocketmq&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">SendResult</span> result <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">sendMessageInTransaction</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;返回结果：&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//事务补偿生产者一定要一直启动着</span></span>
<span class="line">        <span class="token comment">//producer.shutdown();</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</p><h3 id="_2-集群搭建" tabindex="-1"><a class="header-anchor" href="#_2-集群搭建"><span>2. 集群搭建</span></a></h3><h4 id="_2-1-rocketmq集群分类" tabindex="-1"><a class="header-anchor" href="#_2-1-rocketmq集群分类"><span>2.1 RocketMQ集群分类</span></a></h4><ol><li>单机 <ol><li>一个broker提供服务（宕机后服务瘫痪）</li></ol></li><li>集群 <ol><li>多个broker提供服务（单机宕机后消息无法及时被消费）</li><li>多个master多个slave <ol><li>master到slave消息同步方式为同步（较异步方式性能略低，消息无延迟）</li><li>master到slave消息同步方式为异步（较同步方式性能略高，数据略有延迟）</li></ol></li></ol></li></ol><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211160840336.f8e211bc.png" alt="image-20201211160840336"></p><h4 id="_2-2-rocketmq集群特征" tabindex="-1"><a class="header-anchor" href="#_2-2-rocketmq集群特征"><span>2.2 RocketMQ集群特征</span></a></h4><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211160927121.1d9c9bbc.png" alt="image-20201211160927121"></p><p>RocketMQ集群工作流程</p><ol><li>步骤1：NameServer启动，开启监听，等待broker、producer与consumer连接</li><li>步骤2：broker启动，根据配置信息，连接所有的NameServer，并保持长连接</li><li>步骤2补充：如果broker中有现存数据， NameServer将保存topic与broker关系</li><li>步骤3：producer发信息，连接某个NameServer，并建立长连接</li><li>步骤4：producer发消息 <ol><li>步骤4.1若果topic存在，由NameServer直接分配</li><li>步骤4.2如果topic不存在，由NameServer创建topic与broker关系，并分配</li></ol></li><li>步骤5：producer在broker的topic选择一个消息队列（从列表中选择）</li><li>步骤6：producer与broker建立长连接，用于发送消息</li><li>步骤7：producer发送消息</li></ol><p><strong>comsumer工作流程同producer</strong></p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210227230840419.9726b7cd.png" alt="image-20210227230840419"></p><p>双主双从集群搭建:</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20210228145023406.326553b2.png" alt="image-20210228145023406"></p><p>操作步骤：<strong>注意两台机器同时操作</strong></p><ol><li><p>配置服务器环境:</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">vim</span> <span class="token value attr-value">/etc/hosts</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment"># nameserver</span></span>
<span class="line"><span class="token key attr-name">192.168.200.129</span> <span class="token value attr-value">rocketmq-nameserver1</span></span>
<span class="line"><span class="token key attr-name">192.168.200.130</span> <span class="token value attr-value">rocketmq-nameserver2</span></span>
<span class="line"><span class="token comment"># broker</span></span>
<span class="line"><span class="token key attr-name">192.168.200.129</span> <span class="token value attr-value">rocketmq-master1</span></span>
<span class="line"><span class="token key attr-name">192.168.200.129</span> <span class="token value attr-value">rocketmq-slave2</span></span>
<span class="line"><span class="token key attr-name">192.168.200.130</span> <span class="token value attr-value">rocketmq-master2</span></span>
<span class="line"><span class="token key attr-name">192.168.200.130</span> <span class="token value attr-value">rocketmq-slave1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8</p></li><li><p>配置完毕后重启网卡，应用配置</p></li></ol><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">systemctl</span> <span class="token value attr-value">restart network</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><ol><li><p>关闭防火墙或者开发指定端口对外提供服务</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment"># 关闭防火墙</span></span>
<span class="line"><span class="token key attr-name">systemctl</span> <span class="token value attr-value">stop firewalld.service</span></span>
<span class="line"><span class="token comment"># 查看防火墙的状态</span></span>
<span class="line"><span class="token key attr-name">firewall-cmd</span> <span class="token value attr-value">--state</span></span>
<span class="line"><span class="token comment"># 禁止firewall开机启动</span></span>
<span class="line"><span class="token key attr-name">systemctl</span> <span class="token value attr-value">disable firewalld.service</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6</p></li><li><p>配置服务器环境</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">vim</span> <span class="token value attr-value">/etc/profile</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment">#set rocketmq</span></span>
<span class="line"><span class="token key attr-name">ROCKETMQ_HOME</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq</span></span>
<span class="line"><span class="token key attr-name">PATH</span><span class="token punctuation">=</span><span class="token value attr-value">$PATH:$ROCKETMQ_HOME/bin</span></span>
<span class="line"><span class="token key attr-name">export</span> <span class="token value attr-value">ROCKETMQ_HOME PATH</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4</p></li><li><p>配置完毕后重启网卡，应用配置</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">source</span> <span class="token value attr-value">/etc/profile</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p></li><li><p>将rocketmq解压到/rocketmq</p></li><li><p>创建集群服务器的数据存储目录</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment">#master 数据存储目录</span></span>
<span class="line"><span class="token key attr-name">mkdir</span> <span class="token value attr-value">/rocketmq/store</span></span>
<span class="line"><span class="token key attr-name">mkdir</span> <span class="token value attr-value">/rocketmq/store/commitlog</span></span>
<span class="line"><span class="token key attr-name">mkdir</span> <span class="token value attr-value">/rocketmq/store/consumequeue</span></span>
<span class="line"><span class="token key attr-name">mkdir</span> <span class="token value attr-value">/rocketmq/store/index</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">#slave 数据存储目录</span></span>
<span class="line"><span class="token key attr-name">mkdir</span> <span class="token value attr-value">/rocketmq/store-slave</span></span>
<span class="line"><span class="token key attr-name">mkdir</span> <span class="token value attr-value">/rocketmq/store-slave/commitlog</span></span>
<span class="line"><span class="token key attr-name">mkdir</span> <span class="token value attr-value">/rocketmq/store-slave/consumequeue</span></span>
<span class="line"><span class="token key attr-name">mkdir</span> <span class="token value attr-value">/rocketmq/store-slave/index</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11</p></li><li><p>注意master与slave如果在同一个虚拟机中部署，需要将存储目录区分开</p></li><li><p><strong>第一台129机器上</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">cd /rocketmq/conf/2m-2s-sync</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">vim broker-a.properties</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment">#所属集群名字</span></span>
<span class="line"><span class="token key attr-name">brokerClusterName</span><span class="token punctuation">=</span><span class="token value attr-value">rocketmq-cluster</span></span>
<span class="line"><span class="token comment">#broker名字，注意此处不同的配置文件填写的不一样</span></span>
<span class="line"><span class="token key attr-name">brokerName</span><span class="token punctuation">=</span><span class="token value attr-value">broker-a</span></span>
<span class="line"><span class="token comment">#0 表示 Master，&gt;0 表示 Slave</span></span>
<span class="line"><span class="token key attr-name">brokerId</span><span class="token punctuation">=</span><span class="token value attr-value">0</span></span>
<span class="line"><span class="token comment">#nameServer地址，分号分割</span></span>
<span class="line"><span class="token key attr-name">namesrvAddr</span><span class="token punctuation">=</span><span class="token value attr-value">rocketmq-nameserver1:9876;rocketmq-nameserver2:9876</span></span>
<span class="line"><span class="token comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span></span>
<span class="line"><span class="token key attr-name">defaultTopicQueueNums</span><span class="token punctuation">=</span><span class="token value attr-value">4</span></span>
<span class="line"><span class="token comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span></span>
<span class="line"><span class="token key attr-name">autoCreateTopicEnable</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span></span>
<span class="line"><span class="token key attr-name">autoCreateSubscriptionGroup</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token comment">#Broker 对外服务的监听端口</span></span>
<span class="line"><span class="token key attr-name">listenPort</span><span class="token punctuation">=</span><span class="token value attr-value">10911</span></span>
<span class="line"><span class="token comment">#删除文件时间点，默认凌晨 4点</span></span>
<span class="line"><span class="token key attr-name">deleteWhen</span><span class="token punctuation">=</span><span class="token value attr-value">04</span></span>
<span class="line"><span class="token comment">#文件保留时间，默认 48 小时</span></span>
<span class="line"><span class="token key attr-name">fileReservedTime</span><span class="token punctuation">=</span><span class="token value attr-value">120</span></span>
<span class="line"><span class="token comment">#commitLog每个文件的大小默认1G</span></span>
<span class="line"><span class="token key attr-name">mapedFileSizeCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">1073741824</span></span>
<span class="line"><span class="token comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span></span>
<span class="line"><span class="token key attr-name">mapedFileSizeConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">300000</span></span>
<span class="line"><span class="token comment">#destroyMapedFileIntervalForcibly=120000</span></span>
<span class="line"><span class="token comment">#redeleteHangedFileInterval=120000</span></span>
<span class="line"><span class="token comment">#检测物理文件磁盘空间</span></span>
<span class="line"><span class="token key attr-name">diskMaxUsedSpaceRatio</span><span class="token punctuation">=</span><span class="token value attr-value">88</span></span>
<span class="line"><span class="token comment">#存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathRootDir</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store</span></span>
<span class="line"><span class="token comment">#commitLog 存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store/commitlog</span></span>
<span class="line"><span class="token comment">#消费队列存储路径存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store/consumequeue</span></span>
<span class="line"><span class="token comment">#消息索引存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathIndex</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store/index</span></span>
<span class="line"><span class="token comment">#checkpoint 文件存储路径</span></span>
<span class="line"><span class="token key attr-name">storeCheckpoint</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store/checkpoint</span></span>
<span class="line"><span class="token comment">#abort 文件存储路径</span></span>
<span class="line"><span class="token key attr-name">abortFile</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store/abort</span></span>
<span class="line"><span class="token comment">#限制的消息大小</span></span>
<span class="line"><span class="token key attr-name">maxMessageSize</span><span class="token punctuation">=</span><span class="token value attr-value">65536</span></span>
<span class="line"><span class="token comment">#flushCommitLogLeastPages=4</span></span>
<span class="line"><span class="token comment">#flushConsumeQueueLeastPages=2</span></span>
<span class="line"><span class="token comment">#flushCommitLogThoroughInterval=10000</span></span>
<span class="line"><span class="token comment">#flushConsumeQueueThoroughInterval=60000</span></span>
<span class="line"><span class="token comment">#Broker 的角色</span></span>
<span class="line"><span class="token comment">#- ASYNC_MASTER 异步复制Master</span></span>
<span class="line"><span class="token comment">#- SYNC_MASTER 同步双写Master</span></span>
<span class="line"><span class="token comment">#- SLAVE</span></span>
<span class="line"><span class="token key attr-name">brokerRole</span><span class="token punctuation">=</span><span class="token value attr-value">SYNC_MASTER</span></span>
<span class="line"><span class="token comment">#刷盘方式</span></span>
<span class="line"><span class="token comment">#- ASYNC_FLUSH 异步刷盘</span></span>
<span class="line"><span class="token comment">#- SYNC_FLUSH 同步刷盘</span></span>
<span class="line"><span class="token key attr-name">flushDiskType</span><span class="token punctuation">=</span><span class="token value attr-value">SYNC_FLUSH</span></span>
<span class="line"><span class="token comment">#checkTransactionMessageEnable=false</span></span>
<span class="line"><span class="token comment">#发消息线程池数量</span></span>
<span class="line"><span class="token comment">#sendMessageThreadPoolNums=128</span></span>
<span class="line"><span class="token comment">#拉消息线程池数量</span></span>
<span class="line"><span class="token comment">#pullMessageThreadPoolNums=128</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">vim broker-b-s.properties</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment">#所属集群名字</span></span>
<span class="line"><span class="token key attr-name">brokerClusterName</span><span class="token punctuation">=</span><span class="token value attr-value">rocketmq-cluster</span></span>
<span class="line"><span class="token comment">#broker名字，注意此处不同的配置文件填写的不一样</span></span>
<span class="line"><span class="token key attr-name">brokerName</span><span class="token punctuation">=</span><span class="token value attr-value">broker-b</span></span>
<span class="line"><span class="token comment">#0 表示 Master，&gt;0 表示 Slave</span></span>
<span class="line"><span class="token key attr-name">brokerId</span><span class="token punctuation">=</span><span class="token value attr-value">1</span></span>
<span class="line"><span class="token comment">#nameServer地址，分号分割</span></span>
<span class="line"><span class="token key attr-name">namesrvAddr</span><span class="token punctuation">=</span><span class="token value attr-value">rocketmq-nameserver1:9876;rocketmq-nameserver2:9876</span></span>
<span class="line"><span class="token comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span></span>
<span class="line"><span class="token key attr-name">defaultTopicQueueNums</span><span class="token punctuation">=</span><span class="token value attr-value">4</span></span>
<span class="line"><span class="token comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span></span>
<span class="line"><span class="token key attr-name">autoCreateTopicEnable</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span></span>
<span class="line"><span class="token key attr-name">autoCreateSubscriptionGroup</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token comment">#Broker 对外服务的监听端口</span></span>
<span class="line"><span class="token key attr-name">listenPort</span><span class="token punctuation">=</span><span class="token value attr-value">11011</span></span>
<span class="line"><span class="token comment">#删除文件时间点，默认凌晨 4点</span></span>
<span class="line"><span class="token key attr-name">deleteWhen</span><span class="token punctuation">=</span><span class="token value attr-value">04</span></span>
<span class="line"><span class="token comment">#文件保留时间，默认 48 小时</span></span>
<span class="line"><span class="token key attr-name">fileReservedTime</span><span class="token punctuation">=</span><span class="token value attr-value">120</span></span>
<span class="line"><span class="token comment">#commitLog每个文件的大小默认1G</span></span>
<span class="line"><span class="token key attr-name">mapedFileSizeCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">1073741824</span></span>
<span class="line"><span class="token comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span></span>
<span class="line"><span class="token key attr-name">mapedFileSizeConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">300000</span></span>
<span class="line"><span class="token comment">#destroyMapedFileIntervalForcibly=120000</span></span>
<span class="line"><span class="token comment">#redeleteHangedFileInterval=120000</span></span>
<span class="line"><span class="token comment">#检测物理文件磁盘空间</span></span>
<span class="line"><span class="token key attr-name">diskMaxUsedSpaceRatio</span><span class="token punctuation">=</span><span class="token value attr-value">88</span></span>
<span class="line"><span class="token comment">#存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathRootDir</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store-slave</span></span>
<span class="line"><span class="token comment">#commitLog 存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store-slave/commitlog</span></span>
<span class="line"><span class="token comment">#消费队列存储路径存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store-slave/consumequeue</span></span>
<span class="line"><span class="token comment">#消息索引存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathIndex</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store-slave/index</span></span>
<span class="line"><span class="token comment">#checkpoint 文件存储路径</span></span>
<span class="line"><span class="token key attr-name">storeCheckpoint</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store-slave/checkpoint</span></span>
<span class="line"><span class="token comment">#abort 文件存储路径</span></span>
<span class="line"><span class="token key attr-name">abortFile</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store-slave/abort</span></span>
<span class="line"><span class="token comment">#限制的消息大小</span></span>
<span class="line"><span class="token key attr-name">maxMessageSize</span><span class="token punctuation">=</span><span class="token value attr-value">65536</span></span>
<span class="line"><span class="token comment">#flushCommitLogLeastPages=4</span></span>
<span class="line"><span class="token comment">#flushConsumeQueueLeastPages=2</span></span>
<span class="line"><span class="token comment">#flushCommitLogThoroughInterval=10000</span></span>
<span class="line"><span class="token comment">#flushConsumeQueueThoroughInterval=60000</span></span>
<span class="line"><span class="token comment">#Broker 的角色</span></span>
<span class="line"><span class="token comment">#- ASYNC_MASTER 异步复制Master</span></span>
<span class="line"><span class="token comment">#- SYNC_MASTER 同步双写Master</span></span>
<span class="line"><span class="token comment">#- SLAVE</span></span>
<span class="line"><span class="token key attr-name">brokerRole</span><span class="token punctuation">=</span><span class="token value attr-value">SLAVE</span></span>
<span class="line"><span class="token comment">#刷盘方式</span></span>
<span class="line"><span class="token comment">#- ASYNC_FLUSH 异步刷盘</span></span>
<span class="line"><span class="token comment">#- SYNC_FLUSH 同步刷盘</span></span>
<span class="line"><span class="token key attr-name">flushDiskType</span><span class="token punctuation">=</span><span class="token value attr-value">ASYNC_FLUSH</span></span>
<span class="line"><span class="token comment">#checkTransactionMessageEnable=false</span></span>
<span class="line"><span class="token comment">#发消息线程池数量</span></span>
<span class="line"><span class="token comment">#sendMessageThreadPoolNums=128</span></span>
<span class="line"><span class="token comment">#拉消息线程池数量</span></span>
<span class="line"><span class="token comment">#pullMessageThreadPoolNums=128</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">rm -rf broker-a-s.properties</span>
<span class="line">rm -rf broker-b.properties</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2</p><p><strong>第二台130机器上</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">cd /rocketmq/conf/2m-2s-sync</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">vim broker-b.properties</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment">#所属集群名字</span></span>
<span class="line"><span class="token key attr-name">brokerClusterName</span><span class="token punctuation">=</span><span class="token value attr-value">rocketmq-cluster</span></span>
<span class="line"><span class="token comment">#broker名字，注意此处不同的配置文件填写的不一样</span></span>
<span class="line"><span class="token key attr-name">brokerName</span><span class="token punctuation">=</span><span class="token value attr-value">broker-b</span></span>
<span class="line"><span class="token comment">#0 表示 Master，&gt;0 表示 Slave</span></span>
<span class="line"><span class="token key attr-name">brokerId</span><span class="token punctuation">=</span><span class="token value attr-value">0</span></span>
<span class="line"><span class="token comment">#nameServer地址，分号分割</span></span>
<span class="line"><span class="token key attr-name">namesrvAddr</span><span class="token punctuation">=</span><span class="token value attr-value">rocketmq-nameserver1:9876;rocketmq-nameserver2:9876</span></span>
<span class="line"><span class="token comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span></span>
<span class="line"><span class="token key attr-name">defaultTopicQueueNums</span><span class="token punctuation">=</span><span class="token value attr-value">4</span></span>
<span class="line"><span class="token comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span></span>
<span class="line"><span class="token key attr-name">autoCreateTopicEnable</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span></span>
<span class="line"><span class="token key attr-name">autoCreateSubscriptionGroup</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token comment">#Broker 对外服务的监听端口</span></span>
<span class="line"><span class="token key attr-name">listenPort</span><span class="token punctuation">=</span><span class="token value attr-value">10911</span></span>
<span class="line"><span class="token comment">#删除文件时间点，默认凌晨 4点</span></span>
<span class="line"><span class="token key attr-name">deleteWhen</span><span class="token punctuation">=</span><span class="token value attr-value">04</span></span>
<span class="line"><span class="token comment">#文件保留时间，默认 48 小时</span></span>
<span class="line"><span class="token key attr-name">fileReservedTime</span><span class="token punctuation">=</span><span class="token value attr-value">120</span></span>
<span class="line"><span class="token comment">#commitLog每个文件的大小默认1G</span></span>
<span class="line"><span class="token key attr-name">mapedFileSizeCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">1073741824</span></span>
<span class="line"><span class="token comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span></span>
<span class="line"><span class="token key attr-name">mapedFileSizeConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">300000</span></span>
<span class="line"><span class="token comment">#destroyMapedFileIntervalForcibly=120000</span></span>
<span class="line"><span class="token comment">#redeleteHangedFileInterval=120000</span></span>
<span class="line"><span class="token comment">#检测物理文件磁盘空间</span></span>
<span class="line"><span class="token key attr-name">diskMaxUsedSpaceRatio</span><span class="token punctuation">=</span><span class="token value attr-value">88</span></span>
<span class="line"><span class="token comment">#存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathRootDir</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store</span></span>
<span class="line"><span class="token comment">#commitLog 存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store/commitlog</span></span>
<span class="line"><span class="token comment">#消费队列存储路径存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store/consumequeue</span></span>
<span class="line"><span class="token comment">#消息索引存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathIndex</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store/index</span></span>
<span class="line"><span class="token comment">#checkpoint 文件存储路径</span></span>
<span class="line"><span class="token key attr-name">storeCheckpoint</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store/checkpoint</span></span>
<span class="line"><span class="token comment">#abort 文件存储路径</span></span>
<span class="line"><span class="token key attr-name">abortFile</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store/abort</span></span>
<span class="line"><span class="token comment">#限制的消息大小</span></span>
<span class="line"><span class="token key attr-name">maxMessageSize</span><span class="token punctuation">=</span><span class="token value attr-value">65536</span></span>
<span class="line"><span class="token comment">#flushCommitLogLeastPages=4</span></span>
<span class="line"><span class="token comment">#flushConsumeQueueLeastPages=2</span></span>
<span class="line"><span class="token comment">#flushCommitLogThoroughInterval=10000</span></span>
<span class="line"><span class="token comment">#flushConsumeQueueThoroughInterval=60000</span></span>
<span class="line"><span class="token comment">#Broker 的角色</span></span>
<span class="line"><span class="token comment">#- ASYNC_MASTER 异步复制Master</span></span>
<span class="line"><span class="token comment">#- SYNC_MASTER 同步双写Master</span></span>
<span class="line"><span class="token comment">#- SLAVE</span></span>
<span class="line"><span class="token key attr-name">brokerRole</span><span class="token punctuation">=</span><span class="token value attr-value">SYNC_MASTER</span></span>
<span class="line"><span class="token comment">#刷盘方式</span></span>
<span class="line"><span class="token comment">#- ASYNC_FLUSH 异步刷盘</span></span>
<span class="line"><span class="token comment">#- SYNC_FLUSH 同步刷盘</span></span>
<span class="line"><span class="token key attr-name">flushDiskType</span><span class="token punctuation">=</span><span class="token value attr-value">SYNC_FLUSH</span></span>
<span class="line"><span class="token comment">#checkTransactionMessageEnable=false</span></span>
<span class="line"><span class="token comment">#发消息线程池数量</span></span>
<span class="line"><span class="token comment">#sendMessageThreadPoolNums=128</span></span>
<span class="line"><span class="token comment">#拉消息线程池数量</span></span>
<span class="line"><span class="token comment">#pullMessageThreadPoolNums=128</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">vim broker-a-s.properties</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment">#所属集群名字</span></span>
<span class="line"><span class="token key attr-name">brokerClusterName</span><span class="token punctuation">=</span><span class="token value attr-value">rocketmq-cluster</span></span>
<span class="line"><span class="token comment">#broker名字，注意此处不同的配置文件填写的不一样</span></span>
<span class="line"><span class="token key attr-name">brokerName</span><span class="token punctuation">=</span><span class="token value attr-value">broker-a</span></span>
<span class="line"><span class="token comment">#0 表示 Master，&gt;0 表示 Slave</span></span>
<span class="line"><span class="token key attr-name">brokerId</span><span class="token punctuation">=</span><span class="token value attr-value">1</span></span>
<span class="line"><span class="token comment">#nameServer地址，分号分割</span></span>
<span class="line"><span class="token key attr-name">namesrvAddr</span><span class="token punctuation">=</span><span class="token value attr-value">rocketmq-nameserver1:9876;rocketmq-nameserver2:9876</span></span>
<span class="line"><span class="token comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span></span>
<span class="line"><span class="token key attr-name">defaultTopicQueueNums</span><span class="token punctuation">=</span><span class="token value attr-value">4</span></span>
<span class="line"><span class="token comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span></span>
<span class="line"><span class="token key attr-name">autoCreateTopicEnable</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span></span>
<span class="line"><span class="token key attr-name">autoCreateSubscriptionGroup</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token comment">#Broker 对外服务的监听端口</span></span>
<span class="line"><span class="token key attr-name">listenPort</span><span class="token punctuation">=</span><span class="token value attr-value">11011</span></span>
<span class="line"><span class="token comment">#删除文件时间点，默认凌晨 4点</span></span>
<span class="line"><span class="token key attr-name">deleteWhen</span><span class="token punctuation">=</span><span class="token value attr-value">04</span></span>
<span class="line"><span class="token comment">#文件保留时间，默认 48 小时</span></span>
<span class="line"><span class="token key attr-name">fileReservedTime</span><span class="token punctuation">=</span><span class="token value attr-value">120</span></span>
<span class="line"><span class="token comment">#commitLog每个文件的大小默认1G</span></span>
<span class="line"><span class="token key attr-name">mapedFileSizeCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">1073741824</span></span>
<span class="line"><span class="token comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span></span>
<span class="line"><span class="token key attr-name">mapedFileSizeConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">300000</span></span>
<span class="line"><span class="token comment">#destroyMapedFileIntervalForcibly=120000</span></span>
<span class="line"><span class="token comment">#redeleteHangedFileInterval=120000</span></span>
<span class="line"><span class="token comment">#检测物理文件磁盘空间</span></span>
<span class="line"><span class="token key attr-name">diskMaxUsedSpaceRatio</span><span class="token punctuation">=</span><span class="token value attr-value">88</span></span>
<span class="line"><span class="token comment">#存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathRootDir</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store-slave</span></span>
<span class="line"><span class="token comment">#commitLog 存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store-slave/commitlog</span></span>
<span class="line"><span class="token comment">#消费队列存储路径存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store-slave/consumequeue</span></span>
<span class="line"><span class="token comment">#消息索引存储路径</span></span>
<span class="line"><span class="token key attr-name">storePathIndex</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store-slave/index</span></span>
<span class="line"><span class="token comment">#checkpoint 文件存储路径</span></span>
<span class="line"><span class="token key attr-name">storeCheckpoint</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store-slave/checkpoint</span></span>
<span class="line"><span class="token comment">#abort 文件存储路径</span></span>
<span class="line"><span class="token key attr-name">abortFile</span><span class="token punctuation">=</span><span class="token value attr-value">/rocketmq/store-slave/abort</span></span>
<span class="line"><span class="token comment">#限制的消息大小</span></span>
<span class="line"><span class="token key attr-name">maxMessageSize</span><span class="token punctuation">=</span><span class="token value attr-value">65536</span></span>
<span class="line"><span class="token comment">#flushCommitLogLeastPages=4</span></span>
<span class="line"><span class="token comment">#flushConsumeQueueLeastPages=2</span></span>
<span class="line"><span class="token comment">#flushCommitLogThoroughInterval=10000</span></span>
<span class="line"><span class="token comment">#flushConsumeQueueThoroughInterval=60000</span></span>
<span class="line"><span class="token comment">#Broker 的角色</span></span>
<span class="line"><span class="token comment">#- ASYNC_MASTER 异步复制Master</span></span>
<span class="line"><span class="token comment">#- SYNC_MASTER 同步双写Master</span></span>
<span class="line"><span class="token comment">#- SLAVE</span></span>
<span class="line"><span class="token key attr-name">brokerRole</span><span class="token punctuation">=</span><span class="token value attr-value">SLAVE</span></span>
<span class="line"><span class="token comment">#刷盘方式</span></span>
<span class="line"><span class="token comment">#- ASYNC_FLUSH 异步刷盘</span></span>
<span class="line"><span class="token comment">#- SYNC_FLUSH 同步刷盘</span></span>
<span class="line"><span class="token key attr-name">flushDiskType</span><span class="token punctuation">=</span><span class="token value attr-value">ASYNC_FLUSH</span></span>
<span class="line"><span class="token comment">#checkTransactionMessageEnable=false</span></span>
<span class="line"><span class="token comment">#发消息线程池数量</span></span>
<span class="line"><span class="token comment">#sendMessageThreadPoolNums=128</span></span>
<span class="line"><span class="token comment">#拉消息线程池数量</span></span>
<span class="line"><span class="token comment">#pullMessageThreadPoolNums=128</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">rm -rf broker-a.properties</span>
<span class="line">rm -rf broker-b-s.properties</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2</p></li><li><p>检查启动内存</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">vim</span> <span class="token value attr-value">/rocketmq/bin/runbroker.sh</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment"># 开发环境配置 JVM Configuration</span></span>
<span class="line"><span class="token key attr-name">JAVA_OPT</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;\${JAVA_OPT} -server -Xms256m -Xmx256m -Xmn128m&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2</p></li><li><p>启动服务器（在bin目录下依次启动）</p><p>129上</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">nohup</span> <span class="token value attr-value">sh mqnamesrv &amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">nohup</span> <span class="token value attr-value">sh mqbroker -c ../conf/2m-2s-sync/broker-a.properties &amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">nohup</span> <span class="token value attr-value">sh mqbroker -c ../conf/2m-2s-sync/broker-b-s.properties &amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p></li></ol><p>130上</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">nohup</span> <span class="token value attr-value">sh mqnamesrv &amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">nohup</span> <span class="token value attr-value">sh mqbroker -c ../conf/2m-2s-sync/broker-a-s.properties &amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">nohup</span> <span class="token value attr-value">sh mqbroker -c ../conf/2m-2s-sync/broker-b.properties &amp; </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1</p><h4 id="_4-3-rocketmq-console集群监控平台搭建" tabindex="-1"><a class="header-anchor" href="#_4-3-rocketmq-console集群监控平台搭建"><span>4.3 rocketmq-console集群监控平台搭建</span></a></h4><ol><li>incubator-rocketmq-externals是一个基于rocketmq的基础之上扩展开发的开源项目</li><li>获取地址：https://github.com/apache/rocketmq-externals</li><li>rocketmq-console是一款基于java环境开发的（springboot）的管理控制台工具</li></ol><h3 id="_3-高级特性-重点" tabindex="-1"><a class="header-anchor" href="#_3-高级特性-重点"><span>3. 高级特性（重点）</span></a></h3><h4 id="_3-1-消息的存储" tabindex="-1"><a class="header-anchor" href="#_3-1-消息的存储"><span>3.1 消息的存储</span></a></h4><ol><li>消息生成者发送消息到MQ</li><li>MQ返回ACK给生产者</li><li>MQ push 消息给对应的消费者</li><li>消息消费者返回ACK给MQ</li></ol><p>说明：ACK（Acknowledge character）</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211162105593.da7ab600.png" alt="image-20201211162105593"></p><h4 id="_3-2-消息的存储" tabindex="-1"><a class="header-anchor" href="#_3-2-消息的存储"><span>3.2 消息的存储</span></a></h4><ol><li>消息生成者发送消息到MQ</li><li>MQ收到消息，将消息进行持久化，存储该消息</li><li>MQ返回ACK给生产者</li><li>MQ push 消息给对应的消费者</li><li>消息消费者返回ACK给MQ</li><li>MQ删除消息</li></ol><p>注意：</p><ol><li>第⑤步MQ在指定时间内接到消息消费者返回ACK，MQ认定消息消费成功，执行⑥</li><li>第⑤步MQ在指定时间内未接到消息消费者返回ACK，MQ认定消息消费失败，重新执行④⑤⑥</li></ol><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211162231313.9285f9b2.png" alt="image-20201211162231313"></p><h4 id="_3-3-消息的存储介质" tabindex="-1"><a class="header-anchor" href="#_3-3-消息的存储介质"><span>3.3 消息的存储介质</span></a></h4><ol><li>数据库 <ol><li>ActiveMQ</li><li>缺点：数据库瓶颈将成为MQ瓶颈</li></ol></li><li>文件系统 <ol><li>RocketMQ/Kafka/RabbitMQ</li><li>解决方案：采用消息刷盘机制进行数据存储</li><li>缺点：硬盘损坏的问题无法避免</li></ol></li></ol><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211162334322.221493d8.png" alt="image-20201211162334322"></p><h4 id="_3-4-高效的消息存储与读写方式" tabindex="-1"><a class="header-anchor" href="#_3-4-高效的消息存储与读写方式"><span>3.4 高效的消息存储与读写方式</span></a></h4><ol><li><p>SSD（Solid State Disk）</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211162416020.37016a21.png" alt="image-20201211162416020"></p><ol><li><p>随机写（100KB/s）</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211162448564.28e735f2.png" alt="image-20201211162448564"></p></li><li><p>顺序写 （600MB/s）1秒1部电影</p></li></ol></li></ol><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211162541076.35fabc45.png" alt="image-20201211162541076"></p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211162638525.b15728cc.png" alt="image-20201211162638525"></p><ol><li><p>Linux系统发送数据的方式</p></li><li><p>“零拷贝”技术</p><ol><li>数据传输由传统的4次复制简化成3次复制，减少1次复制过程</li><li>Java语言中使用MappedByteBuffer类实现了该技术</li><li>要求：预留存储空间，用于保存数据（1G存储空间起步）</li></ol><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211162729614.fd985403.png" alt="image-20201211162729614"></p></li></ol><h4 id="_3-5-消息存储结构" tabindex="-1"><a class="header-anchor" href="#_3-5-消息存储结构"><span>3.5 消息存储结构</span></a></h4><ol><li>MQ数据存储区域包含如下内容 <ol><li>消息数据存储区域 <ol><li>topic</li><li>queueId</li><li>message</li></ol></li><li>消费逻辑队列 <ol><li>minOffset</li><li>maxOffset</li><li>consumerOffset</li></ol></li><li>索引 <ol><li>key索引</li><li>创建时间索引</li></ol></li></ol></li></ol><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211162857722.2ff7e84e.png" alt="image-20201211162857722"></p><h4 id="_3-6-刷盘机制" tabindex="-1"><a class="header-anchor" href="#_3-6-刷盘机制"><span>3.6 刷盘机制</span></a></h4><ol><li><p>同步刷盘</p><ol><li><p>生产者发送消息到MQ，MQ接到消息数据</p></li><li><p>MQ挂起生产者发送消息的线程</p></li><li><p>MQ将消息数据写入内存</p></li><li><p>内存数据写入硬盘</p></li><li><p>磁盘存储后返回SUCCESS</p></li><li><p>MQ恢复挂起的生产者线程</p></li><li><p>发送ACK到生产者</p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211163159680.93998f9b.png" alt="image-20201211163159680"></p></li></ol></li><li><p>异步刷盘</p><ol><li>生产者发送消息到MQ，MQ接到消息数据</li><li></li><li>MQ将消息数据写入内存</li><li></li><li></li><li></li><li>发送ACK到生产者</li></ol></li></ol><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211163238738.eb3bcd53.png" alt="image-20201211163238738"></p><ol><li>同步刷盘：安全性高，效率低，速度慢（适用于对数据安全要求较高的业务）</li><li>异步刷盘：安全性低，效率高，速度快（适用于对数据处理速度要求较高的业务）</li></ol><p><strong>配置方式</strong></p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment">#刷盘方式</span></span>
<span class="line"><span class="token comment">#- ASYNC_FLUSH 异步刷盘</span></span>
<span class="line"><span class="token comment">#- SYNC_FLUSH 同步刷盘</span></span>
<span class="line"><span class="token key attr-name">flushDiskType</span><span class="token punctuation">=</span><span class="token value attr-value">SYNC_FLUSH</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4</p><h4 id="_5-7-高可用性" tabindex="-1"><a class="header-anchor" href="#_5-7-高可用性"><span>5.7 高可用性</span></a></h4><ol><li>nameserver <ol><li>无状态+全服务器注册</li></ol></li><li>消息服务器 <ol><li>主从架构（2M-2S）</li></ol></li><li>消息生产 <ol><li>生产者将相同的topic绑定到多个group组，保障master挂掉后，其他master仍可正常进行消 息接收</li></ol></li><li>消息消费 <ol><li>RocketMQ自身会根据master的压力确认是否由master承担消息读取的功能，当master繁忙 时候，自动切换由slave承担数据读取的工作</li></ol></li></ol><h4 id="_5-8-主从数据复制" tabindex="-1"><a class="header-anchor" href="#_5-8-主从数据复制"><span>5.8 主从数据复制</span></a></h4><ol><li><p>同步复制</p><ol><li>master接到消息后，先复制到slave，然后反馈给生产者写操作成功</li><li>优点：数据安全，不丢数据，出现故障容易恢复</li><li>缺点：影响数据吞吐量，整体性能低</li></ol></li><li><p>异步复制</p><ol><li>master接到消息后，立即返回给生产者写操作成功，当消息达到一定量后再异步复制到slave</li><li>优点：数据吞吐量大，操作延迟低，性能高</li><li>缺点：数据不安全，会出现数据丢失的现象，一旦master出现故障，从上次数据同步到故障时间的数据将丢失</li></ol></li><li><p>配置方式</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment">#Broker 的角色</span></span>
<span class="line"><span class="token comment">#- ASYNC_MASTER 异步复制Master</span></span>
<span class="line"><span class="token comment">#- SYNC_MASTER 同步双写Master</span></span>
<span class="line"><span class="token comment">#- SLAVE</span></span>
<span class="line"><span class="token key attr-name">brokerRole</span><span class="token punctuation">=</span><span class="token value attr-value">SYNC_MASTER</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 2 3 4 5</p></li></ol><h4 id="_5-9-负载均衡" tabindex="-1"><a class="header-anchor" href="#_5-9-负载均衡"><span>5.9 负载均衡</span></a></h4><ol><li>Producer负载均衡 <ol><li>内部实现了不同broker集群中对同一topic对应消息队列的负载均衡</li></ol></li><li>Consumer负载均衡 <ol><li>平均分配</li><li>循环平均分配</li></ol></li><li>广播模式（不参与负载均衡）</li></ol><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211163654002.33a93491.png" alt="image-20201211163654002"></p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211163706995.3eb09b97.png" alt="image-20201211163706995"></p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211163736770.58dc53f1.png" alt="image-20201211163736770"></p><h4 id="_5-10-消息重试" tabindex="-1"><a class="header-anchor" href="#_5-10-消息重试"><span>5.10 消息重试</span></a></h4><ol><li>当消息消费后未正常返回消费成功的信息将启动消息重试机制</li><li>消息重试机制 <ol><li>顺序消息</li><li>无序消息</li></ol></li></ol><h5 id="_5-10-1-顺序消息重试" tabindex="-1"><a class="header-anchor" href="#_5-10-1-顺序消息重试"><span>5.10.1 顺序消息重试</span></a></h5><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211163848104.704cd4c8.png" alt="image-20201211163848104"></p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211163854405.4a9e5f3f.png" alt="image-20201211163854405"></p><ol><li>当消费者消费消息失败后，RocketMQ会自动进行消息重试（每次间隔时间为 1 秒）</li><li>注意：应用会出现消息消费被阻塞的情况，因此，要对顺序消息的消费情况进行监控，避免阻塞现象的发生</li></ol><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211163910587.d0277d4a.png" alt="image-20201211163910587"></p><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211163928369.22d707c7.png" alt="image-20201211163928369"></p><h5 id="_5-10-2-无序消息重试" tabindex="-1"><a class="header-anchor" href="#_5-10-2-无序消息重试"><span>5.10.2 无序消息重试</span></a></h5><ol><li>无序消息包括普通消息、定时消息、延时消息、事务消息</li><li>无序消息重试仅适用于负载均衡（集群）模型下的消息消费，不适用于广播模式下的消息消费</li><li>为保障无序消息的消费，MQ设定了合理的消息重试间隔时长</li></ol><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211164005887.fdcb00ba.png" alt="image-20201211164005887"></p><h4 id="_5-11-死信队列" tabindex="-1"><a class="header-anchor" href="#_5-11-死信队列"><span>5.11 死信队列</span></a></h4><ol><li>当消息消费重试到达了指定次数（默认16次）后，MQ将无法被正常消费的消息称为死信消息（Dead-Letter Message）</li><li>死信消息不会被直接抛弃，而是保存到了一个全新的队列中，该队列称为死信队列（Dead-Letter Queue）\\</li><li>死信队列特征 <ol><li>归属某一个组（Gourp Id），而不归属Topic，也不归属消费者</li><li>一个死信队列中可以包含同一个组下的多个Topic中的死信消息</li><li>死信队列不会进行默认初始化，当第一个死信出现后，此队列首次初始化</li></ol></li><li>死信队列中消息特征 <ol><li>不会被再次重复消费</li><li>死信队列中的消息有效期为3天，达到时限后将被清除</li></ol></li></ol><h4 id="_5-12-死信处理" tabindex="-1"><a class="header-anchor" href="#_5-12-死信处理"><span>5.12 死信处理</span></a></h4><ol><li>在监控平台中，通过查找死信，获取死信的messageId，然后通过id对死信进行精准消费</li></ol><h4 id="_5-13-消息重复消费" tabindex="-1"><a class="header-anchor" href="#_5-13-消息重复消费"><span>5.13 消息重复消费</span></a></h4><ol><li>消息重复消费原因 <ol><li>生产者发送了重复的消息 <ol><li>网络闪断</li><li>生产者宕机</li></ol></li><li>消息服务器投递了重复的消息 <ol><li>网络闪断</li></ol></li><li>动态的负载均衡过程 <ol><li>网络闪断/抖动</li><li>broker重启</li><li>订阅方应用重启（消费者）</li><li>客户端扩容</li><li>客户端缩容</li></ol></li></ol></li></ol><p><img src="https://www.ydlclass.com/doc21xnv/assets/image-20201211164244534.0bb9f42c.png" alt="image-20201211164244534"></p><h4 id="_5-14-消息幂等" tabindex="-1"><a class="header-anchor" href="#_5-14-消息幂等"><span>5.14 消息幂等</span></a></h4><ol><li><p>对同一条消息，无论消费多少次，结果保持一致，称为消息幂等性</p></li><li><p>解决方案</p><ol><li>使用业务id作为消息的key</li><li>在消费消息时，客户端对key做判定，未使用过放行，使用过抛弃</li></ol></li><li><p>注意：messageId由RocketMQ产生，messageId并不具有唯一性，不能作用幂等判定条件</p></li><li><p>常见的幂等方法示例</p><p>•新增:不幂等 insert into order values (……)</p><p>•查询:幂等</p><p>•删除:幂等 delete from 表 where id =1</p><p>•修改:不幂等 update account set balance = balance+100 where no=1</p><p>•修改:幂等 update account set balance =100 where no=1</p></li></ol><p>计算机考研：</p><p>1计算机组成原理 ：</p><p>2网络：3次握手 4次挥手</p><p>3操作系统：linux</p><p>4数据结构-算法：tree b+ 链表</p><p>执行力</p>`,358),l=[t];function c(i,o){return a(),n("div",null,l)}const r=s(p,[["render",c],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/rocketmq/","title":"RocketMQ","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"RocketMQ基础篇","slug":"rocketmq基础篇","link":"#rocketmq基础篇","children":[{"level":3,"title":"1. MQ简介","slug":"_1-mq简介","link":"#_1-mq简介","children":[]},{"level":3,"title":"2. 环境搭建","slug":"_2-环境搭建","link":"#_2-环境搭建","children":[]},{"level":3,"title":"3. 消息发送（重点）","slug":"_3-消息发送-重点","link":"#_3-消息发送-重点","children":[]},{"level":3,"title":"4 消息类别","slug":"_4-消息类别","link":"#_4-消息类别","children":[]},{"level":3,"title":"5springboot整合","slug":"_5springboot整合","link":"#_5springboot整合","children":[]}]},{"level":2,"title":"RocketMQ 进阶篇","slug":"rocketmq-进阶篇","link":"#rocketmq-进阶篇","children":[{"level":3,"title":"1消息的特殊处理","slug":"_1消息的特殊处理","link":"#_1消息的特殊处理","children":[]},{"level":3,"title":"2. 集群搭建","slug":"_2-集群搭建","link":"#_2-集群搭建","children":[]},{"level":3,"title":"3. 高级特性（重点）","slug":"_3-高级特性-重点","link":"#_3-高级特性-重点","children":[]}]}],"git":{"updatedTime":1723726527000,"contributors":[{"name":"zqb","email":"2506956864@qq.com","commits":1}]},"filePathRelative":"rocketmq/README.md","excerpt":"\\n<h2>RocketMQ基础篇</h2>\\n<h3>1. MQ简介</h3>\\n<h4>1.1 项目工程弊端</h4>\\n<p><img src=\\"https://www.ydlclass.com/doc21xnv/assets/image-20210227005612570.05496644.png\\" alt=\\"image-20210227005612570\\"></p>\\n<h4>1.2 MQ简介</h4>\\n<ol>\\n<li>\\n<p>MQ（Message Queue）消息队列，是一种用来保存消息数据的队列.</p>\\n<ol>\\n<li>\\n<p>队列：数据结构的一种，特征为 “先进先出”</p>\\n<p><img src=\\"https://www.ydlclass.com/doc21xnv/assets/image-20210227005644041.049e2350.png\\" alt=\\"image-20210227005644041\\"></p>\\n</li>\\n<li>\\n<p>何为消息</p>\\n<ol>\\n<li>服务器间的业务请求\\n<ol>\\n<li>原始架构：\\n<ol>\\n<li>服务器中的A功能需要调用B、C模块才能完成</li>\\n</ol>\\n</li>\\n<li>微服务架构：\\n<ol>\\n<li>服务器A向服务器B发送要执行的操作（视为消息）</li>\\n<li>服务器A向服务器C发送要执行的操作（视为消息）</li>\\n</ol>\\n</li>\\n</ol>\\n</li>\\n</ol>\\n</li>\\n</ol>\\n</li>\\n<li>\\n<p>小节:MQ概念</p>\\n</li>\\n</ol>"}');export{r as comp,d as data};
